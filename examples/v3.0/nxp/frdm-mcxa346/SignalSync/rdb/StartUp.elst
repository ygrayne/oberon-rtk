. <tool: Astrobe for RP2350>
. <prog: C:\Users\gray\Projects\oberon\dev\oberon-rtk\examples\v3.0\nxp\frdm-mcxa346\SignalSync\SignalSync.mod>

.     0  00000033C              <Pad: 0>
MODULE StartUp;
(**
  Oberon RTK Framework
  Version: v3.0
  --
  Start-up control
  --
  MCU: MCX-A346
  --
  Copyright (c) 2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, MCU := MCU2;


  PROCEDURE ReleaseReset*(device: INTEGER);
  (* MCU.DEV_* devices *)
    VAR reg, devNo: INTEGER;
  BEGIN
.     4  000000340      0B501  push      { r0, lr }
.     6  000000342      0B082  sub       sp,#8
    reg := device DIV 32;
.     8  000000344      09802  ldr       r0,[sp,#8]
.    10  000000346      01140  asrs      r0,r0,#5
.    12  000000348      09000  str       r0,[sp]
    reg := MCU.MRCC_GLB_RST0_SET + (reg * MCU.MRCC_GLB_RST_Offset);
.    14  00000034A      09800  ldr       r0,[sp]
.    16  00000034C      00100  lsls      r0,r0,#4
.    18  00000034E  0F8DF1020  ldr.w     r1,[pc,#32] -> 52
.    22  000000352      04408  add       r0,r1
.    24  000000354      09000  str       r0,[sp]
    devNo := device MOD 32;
.    26  000000356      09802  ldr       r0,[sp,#8]
.    28  000000358  0F000001F  and.w     r0,r0,#31
.    32  00000035C      09001  str       r0,[sp,#4]
    SYSTEM.PUT(reg, {devNo})
.    34  00000035E      09801  ldr       r0,[sp,#4]
.    36  000000360      02101  movs      r1,#1
.    38  000000362  0FA11F000  lsls.w    r0,r1,r0
  END ReleaseReset;
.    42  000000366      09900  ldr       r1,[sp]
.    44  000000368      06008  str       r0,[r1]
.    46  00000036A      0B003  add       sp,#12
.    48  00000036C      0BD00  pop       { pc }
.    50  00000036E      0BF00  nop       
.    52  000000370  040091004  <Const:  1074335748>


  PROCEDURE ApplyReset*(device: INTEGER);
  (* MCU.DEV_* devices *)
    VAR reg, devNo: INTEGER;
  BEGIN
.    56  000000374      0B501  push      { r0, lr }
.    58  000000376      0B082  sub       sp,#8
    reg := device DIV 32;
.    60  000000378      09802  ldr       r0,[sp,#8]
.    62  00000037A      01140  asrs      r0,r0,#5
.    64  00000037C      09000  str       r0,[sp]
    reg := MCU.MRCC_GLB_RST0_CLR + (reg * MCU.MRCC_GLB_RST_Offset);
.    66  00000037E      09800  ldr       r0,[sp]
.    68  000000380      00100  lsls      r0,r0,#4
.    70  000000382  0F8DF1020  ldr.w     r1,[pc,#32] -> 104
.    74  000000386      04408  add       r0,r1
.    76  000000388      09000  str       r0,[sp]
    devNo := device MOD 32;
.    78  00000038A      09802  ldr       r0,[sp,#8]
.    80  00000038C  0F000001F  and.w     r0,r0,#31
.    84  000000390      09001  str       r0,[sp,#4]
    SYSTEM.PUT(reg, {devNo})
.    86  000000392      09801  ldr       r0,[sp,#4]
.    88  000000394      02101  movs      r1,#1
.    90  000000396  0FA11F000  lsls.w    r0,r1,r0
  END ApplyReset;
.    94  00000039A      09900  ldr       r1,[sp]
.    96  00000039C      06008  str       r0,[r1]
.    98  00000039E      0B003  add       sp,#12
.   100  0000003A0      0BD00  pop       { pc }
.   102  0000003A2      0BF00  nop       
.   104  0000003A4  040091008  <Const:  1074335752>


  PROCEDURE EnableClock*(device: INTEGER);
  (* bus clock *)
  (* MCU.DEV_* devices *)
    VAR reg, devNo: INTEGER;
  BEGIN
.   108  0000003A8      0B501  push      { r0, lr }
.   110  0000003AA      0B082  sub       sp,#8
    reg := device DIV 32;
.   112  0000003AC      09802  ldr       r0,[sp,#8]
.   114  0000003AE      01140  asrs      r0,r0,#5
.   116  0000003B0      09000  str       r0,[sp]
    reg := MCU.MRCC_GLB_CC0_SET + (reg * MCU.MRCC_GLB_CC_Offset);
.   118  0000003B2      09800  ldr       r0,[sp]
.   120  0000003B4      00100  lsls      r0,r0,#4
.   122  0000003B6  0F8DF1020  ldr.w     r1,[pc,#32] -> 156
.   126  0000003BA      04408  add       r0,r1
.   128  0000003BC      09000  str       r0,[sp]
    devNo := device MOD 32;
.   130  0000003BE      09802  ldr       r0,[sp,#8]
.   132  0000003C0  0F000001F  and.w     r0,r0,#31
.   136  0000003C4      09001  str       r0,[sp,#4]
    SYSTEM.PUT(reg, {devNo})
.   138  0000003C6      09801  ldr       r0,[sp,#4]
.   140  0000003C8      02101  movs      r1,#1
.   142  0000003CA  0FA11F000  lsls.w    r0,r1,r0
  END EnableClock;
.   146  0000003CE      09900  ldr       r1,[sp]
.   148  0000003D0      06008  str       r0,[r1]
.   150  0000003D2      0B003  add       sp,#12
.   152  0000003D4      0BD00  pop       { pc }
.   154  0000003D6      0BF00  nop       
.   156  0000003D8  040091044  <Const:  1074335812>


  PROCEDURE DisableClock*(device: INTEGER);
  (* bus clock *)
  (* MCU.DEV_* devices *)
    VAR reg, devNo: INTEGER;
  BEGIN
.   160  0000003DC      0B501  push      { r0, lr }
.   162  0000003DE      0B082  sub       sp,#8
    reg := device DIV 32;
.   164  0000003E0      09802  ldr       r0,[sp,#8]
.   166  0000003E2      01140  asrs      r0,r0,#5
.   168  0000003E4      09000  str       r0,[sp]
    reg := MCU.MRCC_GLB_CC0_CLR + (reg * MCU.MRCC_GLB_CC_Offset);
.   170  0000003E6      09800  ldr       r0,[sp]
.   172  0000003E8      00100  lsls      r0,r0,#4
.   174  0000003EA  0F8DF1020  ldr.w     r1,[pc,#32] -> 208
.   178  0000003EE      04408  add       r0,r1
.   180  0000003F0      09000  str       r0,[sp]
    devNo := device MOD 32;
.   182  0000003F2      09802  ldr       r0,[sp,#8]
.   184  0000003F4  0F000001F  and.w     r0,r0,#31
.   188  0000003F8      09001  str       r0,[sp,#4]
    SYSTEM.PUT(reg, {devNo})
.   190  0000003FA      09801  ldr       r0,[sp,#4]
.   192  0000003FC      02101  movs      r1,#1
.   194  0000003FE  0FA11F000  lsls.w    r0,r1,r0
  END DisableClock;
.   198  000000402      09900  ldr       r1,[sp]
.   200  000000404      06008  str       r0,[r1]
.   202  000000406      0B003  add       sp,#12
.   204  000000408      0BD00  pop       { pc }
.   206  00000040A      0BF00  nop       
.   208  00000040C  040091048  <Const:  1074335816>

END StartUp.
.   212  000000410      0B500  push      { lr }
.   214  000000412      0BD00  pop       { pc }
 