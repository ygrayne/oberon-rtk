. <tool: Astrobe for RP2350>
. <prog: C:\Users\gray\Projects\oberon\dev\oberon-rtk\examples\v3.0\nxp\frdm-mcxa346\SignalSync\SignalSync.mod>

.     0  00000444C              <Pad: 0>
MODULE In;
(**
  Oberon RTK Framework
  Version: v3.0
  --
  Input via two TextIO.Reader.
  --
  MCU: MCX-A346
  --
  Copyright (c) 2020-2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT Cores, Errors, TextIO, Texts;

  CONST
    NumTerminals = 2;

    (* error codes, from TextIO *)
    NoError* = TextIO.NoError;
    BufferOverflow* = TextIO.BufferOverflow;
    SyntaxError* = TextIO.SyntaxError;
    OutOfLimits* = TextIO.OutOfLimits;
    NoInput* = TextIO.NoInput;
    FifoOverrun* = TextIO.FifoOverrun;


  VAR
    R: ARRAY NumTerminals OF TextIO.Reader;

  PROCEDURE Open*(R0, R1: TextIO.Reader);
  BEGIN
.     4  000004450      0B503  push      { r0, r1, lr }
    ASSERT(R0 # NIL, Errors.PreCond);
.     6  000004452      09800  ldr       r0,[sp]
.     8  000004454      02800  cmp       r0,#0
.    10  000004456      0D101  bne.n     2 -> 16
.    12  000004458      0DF22  svc       34
.    14  00000445A      00021  <LineNo: 33>
    R[0] := R0;
.    16  00000445C  0F8DF0010  ldr.w     r0,[pc,#16] -> 36
.    20  000004460      09900  ldr       r1,[sp]
.    22  000004462      06001  str       r1,[r0]
    R[1] := R1
.    24  000004464  0F8DF0008  ldr.w     r0,[pc,#8] -> 36
  END Open;
.    28  000004468      09901  ldr       r1,[sp,#4]
.    30  00000446A      06041  str       r1,[r0,#4]
.    32  00000446C      0B002  add       sp,#8
.    34  00000446E      0BD00  pop       { pc }
.    36  000004470  020027E94  <Global: In data>


  PROCEDURE String*(VAR str: ARRAY OF CHAR; VAR res: INTEGER);
    VAR cid: INTEGER;
  BEGIN
.    40  000004474      0B507  push      { r0, r1, r2, lr }
.    42  000004476      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.    44  000004478      04668  mov       r0,sp
.    46  00000447A  0F7FCFB01  bl.w      Ext Proc #2
.    50  00000447E      0E000  b         0 -> 54
.    52  000004480      0002A  <LineNo: 42>
    Texts.ReadString(R[cid], str, res)
.    54  000004482      09800  ldr       r0,[sp]
.    56  000004484      02802  cmp       r0,#2
.    58  000004486      0D301  bcc.n     2 -> 64
.    60  000004488      0DF01  svc       1
.    62  00000448A      0002B  <LineNo: 43>
.    64  00000448C  0F8DF101C  ldr.w     r1,[pc,#28] -> 96
.    68  000004490      00082  lsls      r2,r0,#2
.    70  000004492  0EB020001  add.w     r0,r2,r1
.    74  000004496      06800  ldr       r0,[r0]
.    76  000004498      09901  ldr       r1,[sp,#4]
.    78  00000449A      09A02  ldr       r2,[sp,#8]
.    80  00000449C      09B03  ldr       r3,[sp,#12]
  END String;
.    82  00000449E  0F7FEFB0D  bl.w      Ext Proc #11
.    86  0000044A2      0E000  b         0 -> 90
.    88  0000044A4      0002B  <LineNo: 43>
.    90  0000044A6      0B004  add       sp,#16
.    92  0000044A8      0BD00  pop       { pc }
.    94  0000044AA      0BF00  nop       
.    96  0000044AC  020027E94  <Global: In data>


  PROCEDURE Int*(VAR int, res: INTEGER);
    VAR cid: INTEGER;
  BEGIN
.   100  0000044B0      0B503  push      { r0, r1, lr }
.   102  0000044B2      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   104  0000044B4      04668  mov       r0,sp
.   106  0000044B6  0F7FCFAE3  bl.w      Ext Proc #2
.   110  0000044BA      0E000  b         0 -> 114
.   112  0000044BC      00032  <LineNo: 50>
    Texts.ReadInt(R[cid], int, res)
.   114  0000044BE      09800  ldr       r0,[sp]
.   116  0000044C0      02802  cmp       r0,#2
.   118  0000044C2      0D301  bcc.n     2 -> 124
.   120  0000044C4      0DF01  svc       1
.   122  0000044C6      00033  <LineNo: 51>
.   124  0000044C8  0F8DF1018  ldr.w     r1,[pc,#24] -> 152
.   128  0000044CC      00082  lsls      r2,r0,#2
.   130  0000044CE  0EB020001  add.w     r0,r2,r1
.   134  0000044D2      06800  ldr       r0,[r0]
.   136  0000044D4      09901  ldr       r1,[sp,#4]
.   138  0000044D6      09A02  ldr       r2,[sp,#8]
  END Int;
.   140  0000044D8  0F7FEFB12  bl.w      Ext Proc #12
.   144  0000044DC      0E000  b         0 -> 148
.   146  0000044DE      00033  <LineNo: 51>
.   148  0000044E0      0B003  add       sp,#12
.   150  0000044E2      0BD00  pop       { pc }
.   152  0000044E4  020027E94  <Global: In data>

BEGIN
.   156  0000044E8      0B500  push      { lr }
  R[0] := NIL; R[1] := NIL
.   158  0000044EA  0F8DF0010  ldr.w     r0,[pc,#16] -> 176
.   162  0000044EE      02100  movs      r1,#0
.   164  0000044F0      06001  str       r1,[r0]
.   166  0000044F2  0F8DF0008  ldr.w     r0,[pc,#8] -> 176
END In.
.   170  0000044F6      02100  movs      r1,#0
.   172  0000044F8      06041  str       r1,[r0,#4]
.   174  0000044FA      0BD00  pop       { pc }
.   176  0000044FC  020027E94  <Global: In data>
 