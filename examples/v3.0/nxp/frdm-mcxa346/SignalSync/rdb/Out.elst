. <tool: Astrobe for RP2350>
. <prog: C:\Users\gray\Projects\oberon\dev\oberon-rtk\examples\v3.0\nxp\frdm-mcxa346\SignalSync\SignalSync.mod>

.     0  00000428C              <Pad: 0>
MODULE Out;
(**
  Oberon RTK Framework
  Version: v3.0
  --
  Output via two TextIO.Writer.
  --
  MCU: MCX-A346
  --
  Copyright (c) 2020-2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT Cores, Errors, TextIO, Texts;

  CONST
    NumTerminals = 2;

  VAR
    W*: ARRAY NumTerminals OF TextIO.Writer; (* module var ok: read only *)


  PROCEDURE Open*(W0, W1: TextIO.Writer);
  BEGIN
.     4  000004290      0B503  push      { r0, r1, lr }
    ASSERT(W0 # NIL, Errors.PreCond);
.     6  000004292      09800  ldr       r0,[sp]
.     8  000004294      02800  cmp       r0,#0
.    10  000004296      0D101  bne.n     2 -> 16
.    12  000004298      0DF22  svc       34
.    14  00000429A      00019  <LineNo: 25>
    W[0] := W0;
.    16  00000429C  0F8DF0010  ldr.w     r0,[pc,#16] -> 36
.    20  0000042A0      09900  ldr       r1,[sp]
.    22  0000042A2      06001  str       r1,[r0]
    W[1] := W1
.    24  0000042A4  0F8DF0008  ldr.w     r0,[pc,#8] -> 36
  END Open;
.    28  0000042A8      09901  ldr       r1,[sp,#4]
.    30  0000042AA      06041  str       r1,[r0,#4]
.    32  0000042AC      0B002  add       sp,#8
.    34  0000042AE      0BD00  pop       { pc }
.    36  0000042B0  020027E9C  <Global: Out data>


  PROCEDURE Char*(ch: CHAR);
    VAR cid: INTEGER;
  BEGIN
.    40  0000042B4      0B501  push      { r0, lr }
.    42  0000042B6      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.    44  0000042B8      04668  mov       r0,sp
.    46  0000042BA  0F7FCFBE1  bl.w      Ext Proc #2
.    50  0000042BE      0E000  b         0 -> 54
.    52  0000042C0      00022  <LineNo: 34>
    Texts.Write(W[cid], ch)
.    54  0000042C2      09800  ldr       r0,[sp]
.    56  0000042C4      02802  cmp       r0,#2
.    58  0000042C6      0D301  bcc.n     2 -> 64
.    60  0000042C8      0DF01  svc       1
.    62  0000042CA      00023  <LineNo: 35>
.    64  0000042CC  0F8DF1018  ldr.w     r1,[pc,#24] -> 92
.    68  0000042D0      00082  lsls      r2,r0,#2
.    70  0000042D2  0EB020001  add.w     r0,r2,r1
.    74  0000042D6      06800  ldr       r0,[r0]
.    76  0000042D8  0F89D1004  ldrb.w    r1,[sp,#4]
  END Char;
.    80  0000042DC  0F7FEF9FE  bl.w      Ext Proc #4
.    84  0000042E0      0E000  b         0 -> 88
.    86  0000042E2      00023  <LineNo: 35>
.    88  0000042E4      0B002  add       sp,#8
.    90  0000042E6      0BD00  pop       { pc }
.    92  0000042E8  020027E9C  <Global: Out data>


  PROCEDURE String*(s: ARRAY OF CHAR);
    VAR cid: INTEGER;
  BEGIN
.    96  0000042EC      0B503  push      { r0, r1, lr }
.    98  0000042EE      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   100  0000042F0      04668  mov       r0,sp
.   102  0000042F2  0F7FCFBC5  bl.w      Ext Proc #2
.   106  0000042F6      0E000  b         0 -> 110
.   108  0000042F8      0002A  <LineNo: 42>
    Texts.WriteString(W[cid], s)
.   110  0000042FA      09800  ldr       r0,[sp]
.   112  0000042FC      02802  cmp       r0,#2
.   114  0000042FE      0D301  bcc.n     2 -> 120
.   116  000004300      0DF01  svc       1
.   118  000004302      0002B  <LineNo: 43>
.   120  000004304  0F8DF1018  ldr.w     r1,[pc,#24] -> 148
.   124  000004308      00082  lsls      r2,r0,#2
.   126  00000430A  0EB020001  add.w     r0,r2,r1
.   130  00000430E      06800  ldr       r0,[r0]
.   132  000004310      09901  ldr       r1,[sp,#4]
.   134  000004312      09A02  ldr       r2,[sp,#8]
  END String;
.   136  000004314  0F7FEF9FA  bl.w      Ext Proc #5
.   140  000004318      0E000  b         0 -> 144
.   142  00000431A      0002B  <LineNo: 43>
.   144  00000431C      0B003  add       sp,#12
.   146  00000431E      0BD00  pop       { pc }
.   148  000004320  020027E9C  <Global: Out data>


  PROCEDURE Ln*;
    VAR cid: INTEGER;
  BEGIN
.   152  000004324      0B500  push      { lr }
.   154  000004326      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   156  000004328      04668  mov       r0,sp
.   158  00000432A  0F7FCFBA9  bl.w      Ext Proc #2
.   162  00000432E      0E000  b         0 -> 166
.   164  000004330      00032  <LineNo: 50>
    Texts.WriteLn(W[cid])
.   166  000004332      09800  ldr       r0,[sp]
.   168  000004334      02802  cmp       r0,#2
.   170  000004336      0D301  bcc.n     2 -> 176
.   172  000004338      0DF01  svc       1
.   174  00000433A      00033  <LineNo: 51>
.   176  00000433C  0F8DF1014  ldr.w     r1,[pc,#20] -> 200
.   180  000004340      00082  lsls      r2,r0,#2
.   182  000004342  0EB020001  add.w     r0,r2,r1
.   186  000004346      06800  ldr       r0,[r0]
  END Ln;
.   188  000004348  0F7FEFA0E  bl.w      Ext Proc #6
.   192  00000434C      0E000  b         0 -> 196
.   194  00000434E      00033  <LineNo: 51>
.   196  000004350      0B001  add       sp,#4
.   198  000004352      0BD00  pop       { pc }
.   200  000004354  020027E9C  <Global: Out data>


  PROCEDURE Int*(n, width: INTEGER);
    VAR cid: INTEGER;
  BEGIN
.   204  000004358      0B503  push      { r0, r1, lr }
.   206  00000435A      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   208  00000435C      04668  mov       r0,sp
.   210  00000435E  0F7FCFB8F  bl.w      Ext Proc #2
.   214  000004362      0E000  b         0 -> 218
.   216  000004364      0003A  <LineNo: 58>
    Texts.WriteInt(W[cid], n, width)
.   218  000004366      09800  ldr       r0,[sp]
.   220  000004368      02802  cmp       r0,#2
.   222  00000436A      0D301  bcc.n     2 -> 228
.   224  00000436C      0DF01  svc       1
.   226  00000436E      0003B  <LineNo: 59>
.   228  000004370  0F8DF1018  ldr.w     r1,[pc,#24] -> 256
.   232  000004374      00082  lsls      r2,r0,#2
.   234  000004376  0EB020001  add.w     r0,r2,r1
.   238  00000437A      06800  ldr       r0,[r0]
.   240  00000437C      09901  ldr       r1,[sp,#4]
.   242  00000437E      09A02  ldr       r2,[sp,#8]
  END Int;
.   244  000004380  0F7FEFA38  bl.w      Ext Proc #7
.   248  000004384      0E000  b         0 -> 252
.   250  000004386      0003B  <LineNo: 59>
.   252  000004388      0B003  add       sp,#12
.   254  00000438A      0BD00  pop       { pc }
.   256  00000438C  020027E9C  <Global: Out data>


  PROCEDURE Hex*(n, width: INTEGER);
   VAR cid: INTEGER;
  BEGIN
.   260  000004390      0B503  push      { r0, r1, lr }
.   262  000004392      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   264  000004394      04668  mov       r0,sp
.   266  000004396  0F7FCFB73  bl.w      Ext Proc #2
.   270  00000439A      0E000  b         0 -> 274
.   272  00000439C      00042  <LineNo: 66>
    Texts.WriteHex(W[cid], n, width)
.   274  00000439E      09800  ldr       r0,[sp]
.   276  0000043A0      02802  cmp       r0,#2
.   278  0000043A2      0D301  bcc.n     2 -> 284
.   280  0000043A4      0DF01  svc       1
.   282  0000043A6      00043  <LineNo: 67>
.   284  0000043A8  0F8DF1018  ldr.w     r1,[pc,#24] -> 312
.   288  0000043AC      00082  lsls      r2,r0,#2
.   290  0000043AE  0EB020001  add.w     r0,r2,r1
.   294  0000043B2      06800  ldr       r0,[r0]
.   296  0000043B4      09901  ldr       r1,[sp,#4]
.   298  0000043B6      09A02  ldr       r2,[sp,#8]
  END Hex;
.   300  0000043B8  0F7FEFA36  bl.w      Ext Proc #8
.   304  0000043BC      0E000  b         0 -> 308
.   306  0000043BE      00043  <LineNo: 67>
.   308  0000043C0      0B003  add       sp,#12
.   310  0000043C2      0BD00  pop       { pc }
.   312  0000043C4  020027E9C  <Global: Out data>


  PROCEDURE Bin*(n, width: INTEGER);
    VAR cid: INTEGER;
  BEGIN
.   316  0000043C8      0B503  push      { r0, r1, lr }
.   318  0000043CA      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   320  0000043CC      04668  mov       r0,sp
.   322  0000043CE  0F7FCFB57  bl.w      Ext Proc #2
.   326  0000043D2      0E000  b         0 -> 330
.   328  0000043D4      0004A  <LineNo: 74>
    Texts.WriteBin(W[cid], n, width)
.   330  0000043D6      09800  ldr       r0,[sp]
.   332  0000043D8      02802  cmp       r0,#2
.   334  0000043DA      0D301  bcc.n     2 -> 340
.   336  0000043DC      0DF01  svc       1
.   338  0000043DE      0004B  <LineNo: 75>
.   340  0000043E0  0F8DF1018  ldr.w     r1,[pc,#24] -> 368
.   344  0000043E4      00082  lsls      r2,r0,#2
.   346  0000043E6  0EB020001  add.w     r0,r2,r1
.   350  0000043EA      06800  ldr       r0,[r0]
.   352  0000043EC      09901  ldr       r1,[sp,#4]
.   354  0000043EE      09A02  ldr       r2,[sp,#8]
  END Bin;
.   356  0000043F0  0F7FEFA34  bl.w      Ext Proc #9
.   360  0000043F4      0E000  b         0 -> 364
.   362  0000043F6      0004B  <LineNo: 75>
.   364  0000043F8      0B003  add       sp,#12
.   366  0000043FA      0BD00  pop       { pc }
.   368  0000043FC  020027E9C  <Global: Out data>


  PROCEDURE Flush*;
    VAR cid: INTEGER;
  BEGIN
.   372  000004400      0B500  push      { lr }
.   374  000004402      0B081  sub       sp,#4
    Cores.GetCoreId(cid);
.   376  000004404      04668  mov       r0,sp
.   378  000004406  0F7FCFB3B  bl.w      Ext Proc #2
.   382  00000440A      0E000  b         0 -> 386
.   384  00000440C      00052  <LineNo: 82>
    Texts.FlushOut(W[cid])
.   386  00000440E      09800  ldr       r0,[sp]
.   388  000004410      02802  cmp       r0,#2
.   390  000004412      0D301  bcc.n     2 -> 396
.   392  000004414      0DF01  svc       1
.   394  000004416      00053  <LineNo: 83>
.   396  000004418  0F8DF1014  ldr.w     r1,[pc,#20] -> 420
.   400  00000441C      00082  lsls      r2,r0,#2
.   402  00000441E  0EB020001  add.w     r0,r2,r1
.   406  000004422      06800  ldr       r0,[r0]
  END Flush;
.   408  000004424  0F7FEFB9A  bl.w      Ext Proc #13
.   412  000004428      0E000  b         0 -> 416
.   414  00000442A      00053  <LineNo: 83>
.   416  00000442C      0B001  add       sp,#4
.   418  00000442E      0BD00  pop       { pc }
.   420  000004430  020027E9C  <Global: Out data>

BEGIN
.   424  000004434      0B500  push      { lr }
  W[0] := NIL; W[1] := NIL
.   426  000004436  0F8DF0010  ldr.w     r0,[pc,#16] -> 444
.   430  00000443A      02100  movs      r1,#0
.   432  00000443C      06001  str       r1,[r0]
.   434  00000443E  0F8DF0008  ldr.w     r0,[pc,#8] -> 444
END Out.
.   438  000004442      02100  movs      r1,#0
.   440  000004444      06041  str       r1,[r0,#4]
.   442  000004446      0BD00  pop       { pc }
.   444  000004448  020027E9C  <Global: Out data>
 