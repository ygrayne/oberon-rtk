. <tool: Astrobe for RP2350>
. <prog: C:\Users\gray\Projects\oberon\dev\oberon-rtk\examples\v3.0\nxp\frdm-mcxa346\SignalSync\SignalSync.mod>

.     0  0000005F0              <Pad: 0>
MODULE LED;
(**
  Oberon RTK Framework
  Version: v3.0
  --
  Green, red and blue LEDs
  --
  MCU: MCX-A346
  Board: FRDM-MCXA346
  --
  * LEDs are active low.
  * LEDs are parts of an RGB LED, so colours get visually mixed.
  --
  Usage:
  * Via procedures:
    LED.Set({LED.Green})
    LED.Clear({LED.Green})
    LED.Toggle({LED.Green})
  * Direct, avoiding procedure calls, eg. for leaf procedures:
    SYSTEM.PUT(LED.LSET, {LED.Green})
    SYSTEM.PUT(LED.LCLR, {LED.Red})
    SYSTEM.PUT(LED.LXOR, {LED.Blue})
  --
  Copyright (c) 2023-2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, MCU := MCU2, StartUp, GPIO;

  CONST
    LEDgreenPinNo = 19; (* all on port 3 *)
    LEDredPinNo = 18;
    LEDbluePinNo = 21;

    Pico* = LEDgreenPinNo;
    Green* = LEDgreenPinNo;
    Red* = LEDredPinNo;
    Blue* = LEDbluePinNo;

    LEDx = {LEDredPinNo, LEDgreenPinNo, LEDbluePinNo};

    LSET* = MCU.RGPIO3_BASE + MCU.RGPIO_PCOR_Offset; (* clear pin for LED = on *)
    LCLR* = MCU.RGPIO3_BASE + MCU.RGPIO_PSOR_Offset;
    LXOR* = MCU.RGPIO3_BASE + MCU.RGPIO_PTOR_Offset;


  PROCEDURE Set*(leds: SET);
  BEGIN
.     4  0000005F4      0B501  push      { r0, lr }
    SYSTEM.PUT(LSET, leds)
  END Set;
.     6  0000005F6  0F8DF000C  ldr.w     r0,[pc,#12] -> 20
.    10  0000005FA      09900  ldr       r1,[sp]
.    12  0000005FC      06001  str       r1,[r0]
.    14  0000005FE      0B001  add       sp,#4
.    16  000000600      0BD00  pop       { pc }
.    18  000000602      0BF00  nop       
.    20  000000604  040105048  <Const:  1074810952>

  PROCEDURE Clear*(leds: SET);
  BEGIN
.    24  000000608      0B501  push      { r0, lr }
    SYSTEM.PUT(LCLR, leds)
  END Clear;
.    26  00000060A  0F8DF000C  ldr.w     r0,[pc,#12] -> 40
.    30  00000060E      09900  ldr       r1,[sp]
.    32  000000610      06001  str       r1,[r0]
.    34  000000612      0B001  add       sp,#4
.    36  000000614      0BD00  pop       { pc }
.    38  000000616      0BF00  nop       
.    40  000000618  040105044  <Const:  1074810948>

  PROCEDURE Toggle*(leds: SET);
  BEGIN
.    44  00000061C      0B501  push      { r0, lr }
    SYSTEM.PUT(LXOR, leds)
  END Toggle;
.    46  00000061E  0F8DF000C  ldr.w     r0,[pc,#12] -> 60
.    50  000000622      09900  ldr       r1,[sp]
.    52  000000624      06001  str       r1,[r0]
.    54  000000626      0B001  add       sp,#4
.    56  000000628      0BD00  pop       { pc }
.    58  00000062A      0BF00  nop       
.    60  00000062C  04010504C  <Const:  1074810956>


  PROCEDURE init;
  BEGIN
.    64  000000630      0B500  push      { lr }
    StartUp.ReleaseReset(MCU.DEV_PORT3);
.    66  000000632      0202F  movs      r0,#47
.    68  000000634  0F7FFFE84  bl.w      Ext Proc #1
.    72  000000638      0E000  b         0 -> 76
.    74  00000063A      00041  <LineNo: 65>
    StartUp.ReleaseReset(MCU.DEV_GPIO3);
.    76  00000063C      02047  movs      r0,#71
.    78  00000063E  0F7FFFE7F  bl.w      Ext Proc #1
.    82  000000642      0E000  b         0 -> 86
.    84  000000644      00042  <LineNo: 66>
    StartUp.EnableClock(MCU.DEV_PORT3);
.    86  000000646      0202F  movs      r0,#47
.    88  000000648  0F7FFFEAE  bl.w      Ext Proc #3
.    92  00000064C      0E000  b         0 -> 96
.    94  00000064E      00043  <LineNo: 67>
    StartUp.EnableClock(MCU.DEV_GPIO3);
.    96  000000650      02047  movs      r0,#71
.    98  000000652  0F7FFFEA9  bl.w      Ext Proc #3
.   102  000000656      0E000  b         0 -> 106
.   104  000000658      00044  <LineNo: 68>
    GPIO.EnableOutput(MCU.GPIO3, LEDx);
.   106  00000065A  0F8DF001C  ldr.w     r0,[pc,#28] -> 136
.   110  00000065E  0F44F1130  mov.w     r1,#02C0000H
.   114  000000662  0F7FFFFB9  bl.w      Ext Proc #12
.   118  000000666      0E000  b         0 -> 122
.   120  000000668      00045  <LineNo: 69>
    Clear(LEDx)
.   122  00000066A  0F44F1030  mov.w     r0,#02C0000H
  END init;
.   126  00000066E  0F7FFFFCB  bl.w      -106 -> 24
.   130  000000672      0E000  b         0 -> 134
.   132  000000674      00046  <LineNo: 70>
.   134  000000676      0BD00  pop       { pc }
.   136  000000678  040105000  <Const:  1074810880>

BEGIN
.   140  00000067C      0B500  push      { lr }
  init
END LED.
.   142  00000067E  0F7FFFFD7  bl.w      -82 -> 64
.   146  000000682      0E000  b         0 -> 150
.   148  000000684      0004A  <LineNo: 74>
.   150  000000686      0BD00  pop       { pc }
 