. <tool: Astrobe for RP2350>
. <prog: C:\Users\gray\Projects\oberon\dev\oberon-rtk\examples\v3.0\nxp\frdm-mcxa346\SignalSync\SignalSync.mod>

.     0  0000041C0              <Pad: 0>
MODULE UARTstr;
(**
  Oberon RTK Framework
  Version: v3.0
  --
  UART string device driver, kernel not required (busy waiting)
  --
  MCU: MCX-A346
  --
  Copyright (c) 2020-2025 Gray, gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, UARTdev, TextIO;


  PROCEDURE* PutChar*(dev: TextIO.Device; ch: CHAR);
    VAR dev0: UARTdev.Device;
  BEGIN
.     4  0000041C4      0B500  push      { lr }
.     6  0000041C6      0B081  sub       sp,#4
    dev0 := dev(UARTdev.Device);
.     8  0000041C8  0F8502C04  ldr.w     r2,[r0,#-4]
.    12  0000041CC      06852  ldr       r2,[r2,#4]
.    14  0000041CE  0F8DF3024  ldr.w     r3,[pc,#36] -> 52
.    18  0000041D2      0429A  cmp       r2,r3
.    20  0000041D4      0D001  beq.n     2 -> 26
.    22  0000041D6      0DF02  svc       2
.    24  0000041D8      00014  <LineNo: 20>
.    26  0000041DA      09000  str       r0,[sp]
    REPEAT UNTIL SYSTEM.BIT(dev0.STAT, UARTdev.STAT_TDRE);
.    28  0000041DC      09A00  ldr       r2,[sp]
.    30  0000041DE      06912  ldr       r2,[r2,#16]
.    32  0000041E0      06813  ldr       r3,[r2]
.    34  0000041E2      0021B  lsls      r3,r3,#8
.    36  0000041E4  0F57FAFFA  bpl.w     -12 -> 28
    SYSTEM.PUT(dev0.DATA, ch)
  END PutChar;
.    40  0000041E8      09A00  ldr       r2,[sp]
.    42  0000041EA      06A12  ldr       r2,[r2,#32]
.    44  0000041EC      07011  strb      r1,[r2]
.    46  0000041EE      0B001  add       sp,#4
.    48  0000041F0      0BD00  pop       { pc }
.    50  0000041F2      0BF00  nop       
.    52  0000041F4      03CD8  <Global: UARTdev code>


  PROCEDURE* PutString*(dev: TextIO.Device; s: ARRAY OF CHAR; numChar: INTEGER);
    VAR dev0: UARTdev.Device; i: INTEGER;
  BEGIN
.    56  0000041F8      0B500  push      { lr }
.    58  0000041FA      0B081  sub       sp,#4
    dev0 := dev(UARTdev.Device);
.    60  0000041FC  0F8505C04  ldr.w     r5,[r0,#-4]
.    64  000004200      0686D  ldr       r5,[r5,#4]
.    66  000004202  0F8DF6040  ldr.w     r6,[pc,#64] -> 132
.    70  000004206      042B5  cmp       r5,r6
.    72  000004208      0D001  beq.n     2 -> 78
.    74  00000420A      0DF02  svc       2
.    76  00000420C      0001D  <LineNo: 29>
.    78  00000420E      09000  str       r0,[sp]
    IF numChar > LEN(s) THEN numChar := LEN(s) END;
.    80  000004210      04293  cmp       r3,r2
.    82  000004212  0F3408001  ble.w     2 -> 88
.    86  000004216      04613  mov       r3,r2
    i := 0;
.    88  000004218      02500  movs      r5,#0
.    90  00000421A      0462C  mov       r4,r5
    WHILE i < numChar DO
.    92  00000421C      0429C  cmp       r4,r3
.    94  00000421E  0F280800F  bge.w     30 -> 128
      IF SYSTEM.BIT(dev0.STAT, UARTdev.STAT_TDRE) THEN
.    98  000004222      09D00  ldr       r5,[sp]
.   100  000004224      0692D  ldr       r5,[r5,#16]
.   102  000004226      0682E  ldr       r6,[r5]
.   104  000004228      00236  lsls      r6,r6,#8
.   106  00000422A  0F1408007  bpl.w     14 -> 124
        SYSTEM.PUT(dev0.DATA, s[i]);
.   110  00000422E  0EB140501  adds.w    r5,r4,r1
.   114  000004232      09E00  ldr       r6,[sp]
.   116  000004234      06A36  ldr       r6,[r6,#32]
.   118  000004236      0782D  ldrb      r5,[r5]
.   120  000004238      07035  strb      r5,[r6]
        INC(i)
      END
.   122  00000423A      03401  adds      r4,#1
    END
.   124  00000423C  0F7FFBFEE  b.w       -36 -> 92
  END PutString;
.   128  000004240      0B001  add       sp,#4
.   130  000004242      0BD00  pop       { pc }
.   132  000004244      03CD8  <Global: UARTdev code>


  PROCEDURE GetString*(dev: TextIO.Device; VAR s: ARRAY OF CHAR; VAR numChar, res: INTEGER);
  END GetString;
.   136  000004248      0B51F  push      { r0, r1, r2, r3, r4, lr }
.   138  00000424A      0B005  add       sp,#20
.   140  00000424C      0BD00  pop       { pc }
.   142  00000424E      0BF00  nop       

END UARTstr.
.   144  000004250      0B500  push      { lr }
.   146  000004252      0BD00  pop       { pc }
 