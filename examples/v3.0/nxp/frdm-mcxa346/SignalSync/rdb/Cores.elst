. <tool: Astrobe for RP2350>
. <prog: C:\Users\gray\Projects\oberon\dev\oberon-rtk\examples\v3.0\nxp\frdm-mcxa346\SignalSync\SignalSync.mod>

.     0  000000A60              <Pad: 0>
MODULE Cores;
(**
  Oberon RTK Framework
  Version: v3.0
  --
  Core handling
  --
  MCU: MCX-A346
  --
  Copyright (c) 2023-2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, MCU := MCU2;

  (*
  VAR
    runInit, runStart: PROCEDURE;
  *)

  PROCEDURE SetCoreId*(id: INTEGER);
    VAR vtor: INTEGER;
  BEGIN
.     4  000000A64      0B501  push      { r0, lr }
.     6  000000A66      0B081  sub       sp,#4
    SYSTEM.GET(MCU.PPB_VTOR, vtor);
.     8  000000A68  0F8DF0010  ldr.w     r0,[pc,#16] -> 28
.    12  000000A6C      06801  ldr       r1,[r0]
.    14  000000A6E      09100  str       r1,[sp]
    SYSTEM.PUT(vtor, id)
  END SetCoreId;
.    16  000000A70      09800  ldr       r0,[sp]
.    18  000000A72      09901  ldr       r1,[sp,#4]
.    20  000000A74      06001  str       r1,[r0]
.    22  000000A76      0B002  add       sp,#8
.    24  000000A78      0BD00  pop       { pc }
.    26  000000A7A      0BF00  nop       
.    28  000000A7C  0E000ED08  <Const:  -536810232>


  PROCEDURE GetCoreId*(VAR cid: INTEGER);
  BEGIN
.    32  000000A80      0B501  push      { r0, lr }
    SYSTEM.GET(MCU.PPB_VTOR, cid);
.    34  000000A82  0F8DF0018  ldr.w     r0,[pc,#24] -> 60
.    38  000000A86      06801  ldr       r1,[r0]
.    40  000000A88      09A00  ldr       r2,[sp]
.    42  000000A8A      06011  str       r1,[r2]
    SYSTEM.GET(cid, cid)
  END GetCoreId;
.    44  000000A8C      09800  ldr       r0,[sp]
.    46  000000A8E      06800  ldr       r0,[r0]
.    48  000000A90      06801  ldr       r1,[r0]
.    50  000000A92      09A00  ldr       r2,[sp]
.    52  000000A94      06011  str       r1,[r2]
.    54  000000A96      0B001  add       sp,#4
.    56  000000A98      0BD00  pop       { pc }
.    58  000000A9A      0BF00  nop       
.    60  000000A9C  0E000ED08  <Const:  -536810232>


  PROCEDURE* CoreId*(): INTEGER;
    VAR cid: INTEGER;
  BEGIN
.    64  000000AA0      0B500  push      { lr }
    SYSTEM.GET(MCU.PPB_VTOR, cid);
.    66  000000AA2  0F8DF1008  ldr.w     r1,[pc,#8] -> 76
.    70  000000AA6      06808  ldr       r0,[r1]
    SYSTEM.GET(cid, cid)
    RETURN cid
.    72  000000AA8      06800  ldr       r0,[r0]
  END CoreId;
.    74  000000AAA      0BD00  pop       { pc }
.    76  000000AAC  0E000ED08  <Const:  -536810232>

(*
  PROCEDURE init;
  BEGIN
    IF runInit # NIL THEN
      runInit
    END;
    runStart
  END init;


  PROCEDURE StartCoreOne*(startProc, initProc: PROCEDURE);
    CONST Core1 = 1;
  BEGIN
    runInit := initProc;
    runStart := startProc;

  END StartCoreOne;
*)
END Cores.
.    80  000000AB0      0B500  push      { lr }
.    82  000000AB2      0BD00  pop       { pc }
 