.     0    010000898H   <Pad: 0>
MODULE Errors;
(**
  Oberon RTK Framework
  Definition of fault and error codes and corresponding message strings.
  --
  Copyright (c) 2019-2024 Gray, gray@grayraven.org
**)

  IMPORT Error;

  CONST
    MaxMsgLength = 64;
    OK* = 0;
    NoError* = 0;
    NotOK* = 1;

    (* MCU fault codes *)
    (* all *)
    NMI* = -2;
    HardFault* = -3;
    (* M3 only *)
    MemMgmtFault* = -4;
    BusFault* = -5;
    UsageFault* = -6;

    (* Astrobe error codes, see Error.mod *)
    FirstAstrobeCode = 1;
    AstrobeUnused = {13..19};
    LastAstrobeCode  = 25;

    (* RTK error/assert codes *)
    FirstRTKcode = 100;
    Trace* = 100;
    PreCond* = 101;
    PostCond* = 102;
    ConsCheck* = 103;
    ProgError* = 104;
    BufferOverflow* = 105;
    BufferEmpty* = 106;
    Timing* = 107;
    HeapOverflow* = 108;
    StackOverflow* = 109;
    StorageOverflow* = 110;
    StorageError* = 111;
    UsageError* = 112;
    DeviceError* = 113;
    ResourceMissing* = 114;
    NotSupported* = 115;
    NotImplemented* = 116;
    NumThreads* = 117;
    LastRTKcode = 117;

    Config* = ProgError; (* legacy *)

  TYPE
    String* = ARRAY MaxMsgLength OF CHAR;


  PROCEDURE faultMessage(code: INTEGER; VAR msg: String);
  BEGIN
.     4    01000089CH        0B503H    push     { r0, r1, lr }
    IF code = NMI THEN
.     6    01000089EH        09800H    ldr      r0,[sp]
.     8    0100008A0H        02102H    movs     r1,#2
.    10    0100008A2H        042C8H    cmn      r0,r1
.    12    0100008A4H        0D001H    beq.n    2 -> 18
.    14    0100008A6H        0E009H    b        18 -> 36
.    16    0100008A8H        046C0H    nop
      msg := "NMI"
    ELSIF code = HardFault THEN
.    18    0100008AAH        09801H    ldr      r0,[sp,#4]
.    20    0100008ACH        0A100H    adr      r1,pc,#0 -> 24
.    22    0100008AEH        0E001H    b        2 -> 28
.    24    0100008B0H   <String: "NMI.">
.    28    0100008B4H        0680AH    ldr      r2,[r1]
.    30    0100008B6H        06002H    str      r2,[r0]
.    32    0100008B8H        0E07FH    b        254 -> 290
.    34    0100008BAH        046C0H    nop
.    36    0100008BCH        09800H    ldr      r0,[sp]
.    38    0100008BEH        02103H    movs     r1,#3
.    40    0100008C0H        042C8H    cmn      r0,r1
.    42    0100008C2H        0D001H    beq.n    2 -> 48
.    44    0100008C4H        0E013H    b        38 -> 86
.    46    0100008C6H        046C0H    nop
      msg := "hard fault"
    ELSIF code = MemMgmtFault THEN
.    48    0100008C8H        09801H    ldr      r0,[sp,#4]
.    50    0100008CAH        046C0H    nop
.    52    0100008CCH        0A100H    adr      r1,pc,#0 -> 56
.    54    0100008CEH        0E005H    b        10 -> 68
.    56    0100008D0H   <String: "hard">
.    60    0100008D4H   <String: " fau">
.    64    0100008D8H   <String: "lt..">
.    68    0100008DCH        04B38H    ldr      r3,[pc,#224] -> 296 ; Const: 0FF000000H -16777216
.    70    0100008DEH        0680AH    ldr      r2,[r1]
.    72    0100008E0H        03104H    adds     r1,#4
.    74    0100008E2H        06002H    str      r2,[r0]
.    76    0100008E4H        03004H    adds     r0,#4
.    78    0100008E6H        0401AH    ands     r2,r3
.    80    0100008E8H        0D1F9H    bne.n    -14 -> 70
.    82    0100008EAH        0E066H    b        204 -> 290
.    84    0100008ECH        046C0H    nop
.    86    0100008EEH        09800H    ldr      r0,[sp]
.    88    0100008F0H        02104H    movs     r1,#4
.    90    0100008F2H        042C8H    cmn      r0,r1
.    92    0100008F4H        0D001H    beq.n    2 -> 98
.    94    0100008F6H        0E018H    b        48 -> 146
.    96    0100008F8H        046C0H    nop
      msg := "memory management fault"
    ELSIF code = BusFault THEN
.    98    0100008FAH        09801H    ldr      r0,[sp,#4]
.   100    0100008FCH        0A100H    adr      r1,pc,#0 -> 104
.   102    0100008FEH        0E00BH    b        22 -> 128
.   104    010000900H   <String: "memo">
.   108    010000904H   <String: "ry m">
.   112    010000908H   <String: "anag">
.   116    01000090CH   <String: "emen">
.   120    010000910H   <String: "t fa">
.   124    010000914H   <String: "ult.">
.   128    010000918H        04B29H    ldr      r3,[pc,#164] -> 296 ; Const: 0FF000000H -16777216
.   130    01000091AH        0680AH    ldr      r2,[r1]
.   132    01000091CH        03104H    adds     r1,#4
.   134    01000091EH        06002H    str      r2,[r0]
.   136    010000920H        03004H    adds     r0,#4
.   138    010000922H        0401AH    ands     r2,r3
.   140    010000924H        0D1F9H    bne.n    -14 -> 130
.   142    010000926H        0E048H    b        144 -> 290
.   144    010000928H        046C0H    nop
.   146    01000092AH        09800H    ldr      r0,[sp]
.   148    01000092CH        02105H    movs     r1,#5
.   150    01000092EH        042C8H    cmn      r0,r1
.   152    010000930H        0D001H    beq.n    2 -> 158
.   154    010000932H        0E012H    b        36 -> 194
.   156    010000934H        046C0H    nop
      msg := "bus fault"
    ELSIF code = UsageFault THEN
.   158    010000936H        09801H    ldr      r0,[sp,#4]
.   160    010000938H        0A100H    adr      r1,pc,#0 -> 164
.   162    01000093AH        0E005H    b        10 -> 176
.   164    01000093CH   <String: "bus ">
.   168    010000940H   <String: "faul">
.   172    010000944H   <String: "t...">
.   176    010000948H        04B1DH    ldr      r3,[pc,#116] -> 296 ; Const: 0FF000000H -16777216
.   178    01000094AH        0680AH    ldr      r2,[r1]
.   180    01000094CH        03104H    adds     r1,#4
.   182    01000094EH        06002H    str      r2,[r0]
.   184    010000950H        03004H    adds     r0,#4
.   186    010000952H        0401AH    ands     r2,r3
.   188    010000954H        0D1F9H    bne.n    -14 -> 178
.   190    010000956H        0E030H    b        96 -> 290
.   192    010000958H        046C0H    nop
.   194    01000095AH        09800H    ldr      r0,[sp]
.   196    01000095CH        02106H    movs     r1,#6
.   198    01000095EH        042C8H    cmn      r0,r1
.   200    010000960H        0D001H    beq.n    2 -> 206
.   202    010000962H        0E012H    b        36 -> 242
.   204    010000964H        046C0H    nop
      msg := "usage fault"
    ELSE
.   206    010000966H        09801H    ldr      r0,[sp,#4]
.   208    010000968H        0A100H    adr      r1,pc,#0 -> 212
.   210    01000096AH        0E005H    b        10 -> 224
.   212    01000096CH   <String: "usag">
.   216    010000970H   <String: "e fa">
.   220    010000974H   <String: "ult.">
.   224    010000978H        04B11H    ldr      r3,[pc,#68] -> 296 ; Const: 0FF000000H -16777216
.   226    01000097AH        0680AH    ldr      r2,[r1]
.   228    01000097CH        03104H    adds     r1,#4
.   230    01000097EH        06002H    str      r2,[r0]
.   232    010000980H        03004H    adds     r0,#4
.   234    010000982H        0401AH    ands     r2,r3
.   236    010000984H        0D1F9H    bne.n    -14 -> 226
      msg := "missing exception handler"
.   238    010000986H        0E018H    b        48 -> 290
.   240    010000988H        046C0H    nop
    END
.   242    01000098AH        09801H    ldr      r0,[sp,#4]
.   244    01000098CH        0A100H    adr      r1,pc,#0 -> 248
.   246    01000098EH        0E00DH    b        26 -> 276
.   248    010000990H   <String: "miss">
.   252    010000994H   <String: "ing ">
.   256    010000998H   <String: "exce">
.   260    01000099CH   <String: "ptio">
.   264    0100009A0H   <String: "n ha">
.   268    0100009A4H   <String: "ndle">
.   272    0100009A8H   <String: "r...">
.   276    0100009ACH        04B04H    ldr      r3,[pc,#16] -> 296 ; Const: 0FF000000H -16777216
.   278    0100009AEH        0680AH    ldr      r2,[r1]
.   280    0100009B0H        03104H    adds     r1,#4
.   282    0100009B2H        06002H    str      r2,[r0]
.   284    0100009B4H        03004H    adds     r0,#4
.   286    0100009B6H        0401AH    ands     r2,r3
.   288    0100009B8H        0D1F9H    bne.n    -14 -> 278
  END faultMessage;
.   290    0100009BAH        0B002H    add      sp,#8
.   292    0100009BCH        0BD00H    pop      { pc }
.   294    0100009BEH        046C0H    nop
.   296    0100009C0H   <Const: 0FF000000H -16777216>


  PROCEDURE errorMessage(code: INTEGER; VAR msg: String);
  BEGIN
.   300    0100009C4H        0B503H    push     { r0, r1, lr }
    IF (code >= FirstRTKcode) & (code <= LastRTKcode) THEN
.   302    0100009C6H        09800H    ldr      r0,[sp]
.   304    0100009C8H        02864H    cmp      r0,#100
.   306    0100009CAH        0DA01H    bge.n    2 -> 312
.   308    0100009CCH        0E1ACH    b        856 -> 1168
.   310    0100009CEH        046C0H    nop
.   312    0100009D0H        09800H    ldr      r0,[sp]
.   314    0100009D2H        02875H    cmp      r0,#117
.   316    0100009D4H        0DD01H    ble.n    2 -> 322
.   318    0100009D6H        0E1A7H    b        846 -> 1168
.   320    0100009D8H        046C0H    nop
      CASE code OF
        Trace:
.   322    0100009DAH        09800H    ldr      r0,[sp]
.   324    0100009DCH        04601H    mov      r1,r0
.   326    0100009DEH        03964H    subs     r1,#100
.   328    0100009E0H        02912H    cmp      r1,#18
.   330    0100009E2H        0DD01H    ble.n    2 -> 336
.   332    0100009E4H        0DF04H    svc      4
.   334    0100009E6H   <LineNo: 80>
.   336    0100009E8H          049H    lsls     r1,r1,#1
.   338    0100009EAH        046C0H    nop
.   340    0100009ECH        04A01H    ldr      r2,[pc,#4] -> 348 ; Const: 030BH 779
.   342    0100009EEH        01852H    adds     r2,r2,r1
.   344    0100009F0H        0447AH    add      r2,pc
.   346    0100009F2H        04710H    bx       r2
.   348    0100009F4H   <Const: 030BH 779>
          msg := "stack trace"
      | PreCond:
.   352    0100009F8H        09801H    ldr      r0,[sp,#4]
.   354    0100009FAH        046C0H    nop
.   356    0100009FCH        0A100H    adr      r1,pc,#0 -> 360
.   358    0100009FEH        0E005H    b        10 -> 372
.   360    010000A00H   <String: "stac">
.   364    010000A04H   <String: "k tr">
.   368    010000A08H   <String: "ace.">
.   372    010000A0CH        04B72H    ldr      r3,[pc,#456] -> 832 ; Const: 0FF000000H -16777216
.   374    010000A0EH        0680AH    ldr      r2,[r1]
.   376    010000A10H        03104H    adds     r1,#4
.   378    010000A12H        06002H    str      r2,[r0]
.   380    010000A14H        03004H    adds     r0,#4
.   382    010000A16H        0401AH    ands     r2,r3
.   384    010000A18H        0D1F9H    bne.n    -14 -> 374
.   386    010000A1AH        0E183H    b        774 -> 1164
.   388    010000A1CH        046C0H    nop
          msg := "precondition violation"
      | PostCond:
.   390    010000A1EH        09801H    ldr      r0,[sp,#4]
.   392    010000A20H        0A100H    adr      r1,pc,#0 -> 396
.   394    010000A22H        0E00BH    b        22 -> 420
.   396    010000A24H   <String: "prec">
.   400    010000A28H   <String: "ondi">
.   404    010000A2CH   <String: "tion">
.   408    010000A30H   <String: " vio">
.   412    010000A34H   <String: "lati">
.   416    010000A38H   <String: "on..">
.   420    010000A3CH        04B66H    ldr      r3,[pc,#408] -> 832 ; Const: 0FF000000H -16777216
.   422    010000A3EH        0680AH    ldr      r2,[r1]
.   424    010000A40H        03104H    adds     r1,#4
.   426    010000A42H        06002H    str      r2,[r0]
.   428    010000A44H        03004H    adds     r0,#4
.   430    010000A46H        0401AH    ands     r2,r3
.   432    010000A48H        0D1F9H    bne.n    -14 -> 422
.   434    010000A4AH        0E16BH    b        726 -> 1164
.   436    010000A4CH        046C0H    nop
          msg := "postcondition violation"
      | ConsCheck:
.   438    010000A4EH        09801H    ldr      r0,[sp,#4]
.   440    010000A50H        0A100H    adr      r1,pc,#0 -> 444
.   442    010000A52H        0E00BH    b        22 -> 468
.   444    010000A54H   <String: "post">
.   448    010000A58H   <String: "cond">
.   452    010000A5CH   <String: "itio">
.   456    010000A60H   <String: "n vi">
.   460    010000A64H   <String: "olat">
.   464    010000A68H   <String: "ion.">
.   468    010000A6CH        04B5AH    ldr      r3,[pc,#360] -> 832 ; Const: 0FF000000H -16777216
.   470    010000A6EH        0680AH    ldr      r2,[r1]
.   472    010000A70H        03104H    adds     r1,#4
.   474    010000A72H        06002H    str      r2,[r0]
.   476    010000A74H        03004H    adds     r0,#4
.   478    010000A76H        0401AH    ands     r2,r3
.   480    010000A78H        0D1F9H    bne.n    -14 -> 470
.   482    010000A7AH        0E153H    b        678 -> 1164
.   484    010000A7CH        046C0H    nop
          msg := "consistency check violation"
      | ProgError:
.   486    010000A7EH        09801H    ldr      r0,[sp,#4]
.   488    010000A80H        0A100H    adr      r1,pc,#0 -> 492
.   490    010000A82H        0E00DH    b        26 -> 520
.   492    010000A84H   <String: "cons">
.   496    010000A88H   <String: "iste">
.   500    010000A8CH   <String: "ncy ">
.   504    010000A90H   <String: "chec">
.   508    010000A94H   <String: "k vi">
.   512    010000A98H   <String: "olat">
.   516    010000A9CH   <String: "ion.">
.   520    010000AA0H        04B4DH    ldr      r3,[pc,#308] -> 832 ; Const: 0FF000000H -16777216
.   522    010000AA2H        0680AH    ldr      r2,[r1]
.   524    010000AA4H        03104H    adds     r1,#4
.   526    010000AA6H        06002H    str      r2,[r0]
.   528    010000AA8H        03004H    adds     r0,#4
.   530    010000AAAH        0401AH    ands     r2,r3
.   532    010000AACH        0D1F9H    bne.n    -14 -> 522
.   534    010000AAEH        0E139H    b        626 -> 1164
.   536    010000AB0H        046C0H    nop
          msg := "program design error"
      | BufferOverflow:
.   538    010000AB2H        09801H    ldr      r0,[sp,#4]
.   540    010000AB4H        0A100H    adr      r1,pc,#0 -> 544
.   542    010000AB6H        0E00BH    b        22 -> 568
.   544    010000AB8H   <String: "prog">
.   548    010000ABCH   <String: "ram ">
.   552    010000AC0H   <String: "desi">
.   556    010000AC4H   <String: "gn e">
.   560    010000AC8H   <String: "rror">
.   564    010000ACCH   <String: "....">
.   568    010000AD0H        04B41H    ldr      r3,[pc,#260] -> 832 ; Const: 0FF000000H -16777216
.   570    010000AD2H        0680AH    ldr      r2,[r1]
.   572    010000AD4H        03104H    adds     r1,#4
.   574    010000AD6H        06002H    str      r2,[r0]
.   576    010000AD8H        03004H    adds     r0,#4
.   578    010000ADAH        0401AH    ands     r2,r3
.   580    010000ADCH        0D1F9H    bne.n    -14 -> 570
.   582    010000ADEH        0E121H    b        578 -> 1164
.   584    010000AE0H        046C0H    nop
          msg := "buffer overflow"
      | BufferEmpty:
.   586    010000AE2H        09801H    ldr      r0,[sp,#4]
.   588    010000AE4H        0A100H    adr      r1,pc,#0 -> 592
.   590    010000AE6H        0E007H    b        14 -> 608
.   592    010000AE8H   <String: "buff">
.   596    010000AECH   <String: "er o">
.   600    010000AF0H   <String: "verf">
.   604    010000AF4H   <String: "low.">
.   608    010000AF8H        04B37H    ldr      r3,[pc,#220] -> 832 ; Const: 0FF000000H -16777216
.   610    010000AFAH        0680AH    ldr      r2,[r1]
.   612    010000AFCH        03104H    adds     r1,#4
.   614    010000AFEH        06002H    str      r2,[r0]
.   616    010000B00H        03004H    adds     r0,#4
.   618    010000B02H        0401AH    ands     r2,r3
.   620    010000B04H        0D1F9H    bne.n    -14 -> 610
.   622    010000B06H        0E10DH    b        538 -> 1164
.   624    010000B08H        046C0H    nop
          msg := "buffer empty"
      | Timing:
.   626    010000B0AH        09801H    ldr      r0,[sp,#4]
.   628    010000B0CH        0A100H    adr      r1,pc,#0 -> 632
.   630    010000B0EH        0E007H    b        14 -> 648
.   632    010000B10H   <String: "buff">
.   636    010000B14H   <String: "er e">
.   640    010000B18H   <String: "mpty">
.   644    010000B1CH   <String: "....">
.   648    010000B20H        04B2DH    ldr      r3,[pc,#180] -> 832 ; Const: 0FF000000H -16777216
.   650    010000B22H        0680AH    ldr      r2,[r1]
.   652    010000B24H        03104H    adds     r1,#4
.   654    010000B26H        06002H    str      r2,[r0]
.   656    010000B28H        03004H    adds     r0,#4
.   658    010000B2AH        0401AH    ands     r2,r3
.   660    010000B2CH        0D1F9H    bne.n    -14 -> 650
.   662    010000B2EH        0E0F9H    b        498 -> 1164
.   664    010000B30H        046C0H    nop
          msg := "timing error"
      | HeapOverflow:
.   666    010000B32H        09801H    ldr      r0,[sp,#4]
.   668    010000B34H        0A100H    adr      r1,pc,#0 -> 672
.   670    010000B36H        0E007H    b        14 -> 688
.   672    010000B38H   <String: "timi">
.   676    010000B3CH   <String: "ng e">
.   680    010000B40H   <String: "rror">
.   684    010000B44H   <String: "....">
.   688    010000B48H        04B23H    ldr      r3,[pc,#140] -> 832 ; Const: 0FF000000H -16777216
.   690    010000B4AH        0680AH    ldr      r2,[r1]
.   692    010000B4CH        03104H    adds     r1,#4
.   694    010000B4EH        06002H    str      r2,[r0]
.   696    010000B50H        03004H    adds     r0,#4
.   698    010000B52H        0401AH    ands     r2,r3
.   700    010000B54H        0D1F9H    bne.n    -14 -> 690
.   702    010000B56H        0E0E5H    b        458 -> 1164
.   704    010000B58H        046C0H    nop
          msg := "heap overflow"
      | StackOverflow:
.   706    010000B5AH        09801H    ldr      r0,[sp,#4]
.   708    010000B5CH        0A100H    adr      r1,pc,#0 -> 712
.   710    010000B5EH        0E007H    b        14 -> 728
.   712    010000B60H   <String: "heap">
.   716    010000B64H   <String: " ove">
.   720    010000B68H   <String: "rflo">
.   724    010000B6CH   <String: "w...">
.   728    010000B70H        04B19H    ldr      r3,[pc,#100] -> 832 ; Const: 0FF000000H -16777216
.   730    010000B72H        0680AH    ldr      r2,[r1]
.   732    010000B74H        03104H    adds     r1,#4
.   734    010000B76H        06002H    str      r2,[r0]
.   736    010000B78H        03004H    adds     r0,#4
.   738    010000B7AH        0401AH    ands     r2,r3
.   740    010000B7CH        0D1F9H    bne.n    -14 -> 730
.   742    010000B7EH        0E0D1H    b        418 -> 1164
.   744    010000B80H        046C0H    nop
          msg := "stack overflow"
      | StorageOverflow:
.   746    010000B82H        09801H    ldr      r0,[sp,#4]
.   748    010000B84H        0A100H    adr      r1,pc,#0 -> 752
.   750    010000B86H        0E007H    b        14 -> 768
.   752    010000B88H   <String: "stac">
.   756    010000B8CH   <String: "k ov">
.   760    010000B90H   <String: "erfl">
.   764    010000B94H   <String: "ow..">
.   768    010000B98H        04B0FH    ldr      r3,[pc,#60] -> 832 ; Const: 0FF000000H -16777216
.   770    010000B9AH        0680AH    ldr      r2,[r1]
.   772    010000B9CH        03104H    adds     r1,#4
.   774    010000B9EH        06002H    str      r2,[r0]
.   776    010000BA0H        03004H    adds     r0,#4
.   778    010000BA2H        0401AH    ands     r2,r3
.   780    010000BA4H        0D1F9H    bne.n    -14 -> 770
.   782    010000BA6H        0E0BDH    b        378 -> 1164
.   784    010000BA8H        046C0H    nop
          msg := "storage overflow"
      | StorageError:
.   786    010000BAAH        09801H    ldr      r0,[sp,#4]
.   788    010000BACH        0A100H    adr      r1,pc,#0 -> 792
.   790    010000BAEH        0E009H    b        18 -> 812
.   792    010000BB0H   <String: "stor">
.   796    010000BB4H   <String: "age ">
.   800    010000BB8H   <String: "over">
.   804    010000BBCH   <String: "flow">
.   808    010000BC0H   <String: "....">
.   812    010000BC4H        04B04H    ldr      r3,[pc,#16] -> 832 ; Const: 0FF000000H -16777216
.   814    010000BC6H        0680AH    ldr      r2,[r1]
.   816    010000BC8H        03104H    adds     r1,#4
.   818    010000BCAH        06002H    str      r2,[r0]
.   820    010000BCCH        03004H    adds     r0,#4
.   822    010000BCEH        0401AH    ands     r2,r3
.   824    010000BD0H        0D1F9H    bne.n    -14 -> 814
.   826    010000BD2H        046C0H    nop
.   828    010000BD4H    0F000F802H    bl.w     Errors.errorMessage + 536
.   832    010000BD8H   <Const: 0FF000000H -16777216>
.   836    010000BDCH        0E0A2H    b        324 -> 1164
.   838    010000BDEH        046C0H    nop
          msg := "storage error"
      | UsageError:
.   840    010000BE0H        09801H    ldr      r0,[sp,#4]
.   842    010000BE2H        046C0H    nop
.   844    010000BE4H        0A100H    adr      r1,pc,#0 -> 848
.   846    010000BE6H        0E007H    b        14 -> 864
.   848    010000BE8H   <String: "stor">
.   852    010000BECH   <String: "age ">
.   856    010000BF0H   <String: "erro">
.   860    010000BF4H   <String: "r...">
.   864    010000BF8H        04B66H    ldr      r3,[pc,#408] -> 1276 ; Const: 0FF000000H -16777216
.   866    010000BFAH        0680AH    ldr      r2,[r1]
.   868    010000BFCH        03104H    adds     r1,#4
.   870    010000BFEH        06002H    str      r2,[r0]
.   872    010000C00H        03004H    adds     r0,#4
.   874    010000C02H        0401AH    ands     r2,r3
.   876    010000C04H        0D1F9H    bne.n    -14 -> 866
.   878    010000C06H        0E08DH    b        282 -> 1164
.   880    010000C08H        046C0H    nop
          msg := "usage error"
      | ResourceMissing:
.   882    010000C0AH        09801H    ldr      r0,[sp,#4]
.   884    010000C0CH        0A100H    adr      r1,pc,#0 -> 888
.   886    010000C0EH        0E005H    b        10 -> 900
.   888    010000C10H   <String: "usag">
.   892    010000C14H   <String: "e er">
.   896    010000C18H   <String: "ror.">
.   900    010000C1CH        04B5DH    ldr      r3,[pc,#372] -> 1276 ; Const: 0FF000000H -16777216
.   902    010000C1EH        0680AH    ldr      r2,[r1]
.   904    010000C20H        03104H    adds     r1,#4
.   906    010000C22H        06002H    str      r2,[r0]
.   908    010000C24H        03004H    adds     r0,#4
.   910    010000C26H        0401AH    ands     r2,r3
.   912    010000C28H        0D1F9H    bne.n    -14 -> 902
.   914    010000C2AH        0E07BH    b        246 -> 1164
.   916    010000C2CH        046C0H    nop
          msg := "resource missing or faulty"
      | NotSupported:
.   918    010000C2EH        09801H    ldr      r0,[sp,#4]
.   920    010000C30H        0A100H    adr      r1,pc,#0 -> 924
.   922    010000C32H        0E00DH    b        26 -> 952
.   924    010000C34H   <String: "reso">
.   928    010000C38H   <String: "urce">
.   932    010000C3CH   <String: " mis">
.   936    010000C40H   <String: "sing">
.   940    010000C44H   <String: " or ">
.   944    010000C48H   <String: "faul">
.   948    010000C4CH   <String: "ty..">
.   952    010000C50H        04B50H    ldr      r3,[pc,#320] -> 1276 ; Const: 0FF000000H -16777216
.   954    010000C52H        0680AH    ldr      r2,[r1]
.   956    010000C54H        03104H    adds     r1,#4
.   958    010000C56H        06002H    str      r2,[r0]
.   960    010000C58H        03004H    adds     r0,#4
.   962    010000C5AH        0401AH    ands     r2,r3
.   964    010000C5CH        0D1F9H    bne.n    -14 -> 954
.   966    010000C5EH        0E061H    b        194 -> 1164
.   968    010000C60H        046C0H    nop
          msg := "functionality not supported"
      | NotImplemented:
.   970    010000C62H        09801H    ldr      r0,[sp,#4]
.   972    010000C64H        0A100H    adr      r1,pc,#0 -> 976
.   974    010000C66H        0E00DH    b        26 -> 1004
.   976    010000C68H   <String: "func">
.   980    010000C6CH   <String: "tion">
.   984    010000C70H   <String: "alit">
.   988    010000C74H   <String: "y no">
.   992    010000C78H   <String: "t su">
.   996    010000C7CH   <String: "ppor">
.  1000    010000C80H   <String: "ted.">
.  1004    010000C84H        04B43H    ldr      r3,[pc,#268] -> 1276 ; Const: 0FF000000H -16777216
.  1006    010000C86H        0680AH    ldr      r2,[r1]
.  1008    010000C88H        03104H    adds     r1,#4
.  1010    010000C8AH        06002H    str      r2,[r0]
.  1012    010000C8CH        03004H    adds     r0,#4
.  1014    010000C8EH        0401AH    ands     r2,r3
.  1016    010000C90H        0D1F9H    bne.n    -14 -> 1006
.  1018    010000C92H        0E047H    b        142 -> 1164
.  1020    010000C94H        046C0H    nop
          msg := "functionality not (yet) implemented"
      | NumThreads:
.  1022    010000C96H        09801H    ldr      r0,[sp,#4]
.  1024    010000C98H        0A100H    adr      r1,pc,#0 -> 1028
.  1026    010000C9AH        0E011H    b        34 -> 1064
.  1028    010000C9CH   <String: "func">
.  1032    010000CA0H   <String: "tion">
.  1036    010000CA4H   <String: "alit">
.  1040    010000CA8H   <String: "y no">
.  1044    010000CACH   <String: "t (y">
.  1048    010000CB0H   <String: "et) ">
.  1052    010000CB4H   <String: "impl">
.  1056    010000CB8H   <String: "emen">
.  1060    010000CBCH   <String: "ted.">
.  1064    010000CC0H        04B34H    ldr      r3,[pc,#208] -> 1276 ; Const: 0FF000000H -16777216
.  1066    010000CC2H        0680AH    ldr      r2,[r1]
.  1068    010000CC4H        03104H    adds     r1,#4
.  1070    010000CC6H        06002H    str      r2,[r0]
.  1072    010000CC8H        03004H    adds     r0,#4
.  1074    010000CCAH        0401AH    ands     r2,r3
.  1076    010000CCCH        0D1F9H    bne.n    -14 -> 1066
.  1078    010000CCEH        0E029H    b        82 -> 1164
.  1080    010000CD0H        046C0H    nop
          msg := "too many threads"
      END
.  1082    010000CD2H        09801H    ldr      r0,[sp,#4]
.  1084    010000CD4H        0A100H    adr      r1,pc,#0 -> 1088
.  1086    010000CD6H        0E009H    b        18 -> 1108
.  1088    010000CD8H   <String: "too ">
.  1092    010000CDCH   <String: "many">
.  1096    010000CE0H   <String: " thr">
.  1100    010000CE4H   <String: "eads">
.  1104    010000CE8H   <String: "....">
.  1108    010000CECH        04B29H    ldr      r3,[pc,#164] -> 1276 ; Const: 0FF000000H -16777216
.  1110    010000CEEH        0680AH    ldr      r2,[r1]
.  1112    010000CF0H        03104H    adds     r1,#4
.  1114    010000CF2H        06002H    str      r2,[r0]
.  1116    010000CF4H        03004H    adds     r0,#4
.  1118    010000CF6H        0401AH    ands     r2,r3
.  1120    010000CF8H        0D1F9H    bne.n    -14 -> 1110
.  1122    010000CFAH        0E013H    b        38 -> 1164
.  1124    010000CFCH        046C0H    nop
    ELSIF (code >= FirstAstrobeCode) & (code <= LastAstrobeCode) & ~(code IN AstrobeUnused) THEN
.  1126    010000CFEH        0E67BH    b        -778 -> 352
.  1128    010000D00H        0E68DH    b        -742 -> 390
.  1130    010000D02H        0E6A4H    b        -696 -> 438
.  1132    010000D04H        0E6BBH    b        -650 -> 486
.  1134    010000D06H        0E6D4H    b        -600 -> 538
.  1136    010000D08H        0E6EBH    b        -554 -> 586
.  1138    010000D0AH        0E6FEH    b        -516 -> 626
.  1140    010000D0CH        0E711H    b        -478 -> 666
.  1142    010000D0EH        0E724H    b        -440 -> 706
.  1144    010000D10H        0E737H    b        -402 -> 746
.  1146    010000D12H        0E74AH    b        -364 -> 786
.  1148    010000D14H        0E764H    b        -312 -> 840
.  1150    010000D16H        0E778H    b        -272 -> 882
.  1152    010000D18H        0E663H    b        -826 -> 330
.  1154    010000D1AH        0E788H    b        -240 -> 918
.  1156    010000D1CH        0E7A1H    b        -190 -> 970
.  1158    010000D1EH        0E7BAH    b        -140 -> 1022
.  1160    010000D20H        0E7D7H    b        -82 -> 1082
.  1162    010000D22H        046C0H    nop
.  1164    010000D24H        0E033H    b        102 -> 1270
.  1166    010000D26H        046C0H    nop
.  1168    010000D28H        09800H    ldr      r0,[sp]
.  1170    010000D2AH        02801H    cmp      r0,#1
.  1172    010000D2CH        0DA01H    bge.n    2 -> 1178
.  1174    010000D2EH        0E01CH    b        56 -> 1234
.  1176    010000D30H        046C0H    nop
.  1178    010000D32H        09800H    ldr      r0,[sp]
.  1180    010000D34H        02819H    cmp      r0,#25
.  1182    010000D36H        0DD01H    ble.n    2 -> 1188
.  1184    010000D38H        0E017H    b        46 -> 1234
.  1186    010000D3AH        046C0H    nop
.  1188    010000D3CH        0207FH    movs     r0,#127
.  1190    010000D3EH         0340H    lsls     r0,r0,#13
.  1192    010000D40H        09900H    ldr      r1,[sp]
.  1194    010000D42H        02201H    movs     r2,#1
.  1196    010000D44H        0408AH    lsls     r2,r1
.  1198    010000D46H        04210H    tst      r0,r2
.  1200    010000D48H        0D001H    beq.n    2 -> 1206
.  1202    010000D4AH        0E00EH    b        28 -> 1234
.  1204    010000D4CH        046C0H    nop
      Error.Msg(code, msg)
.  1206    010000D4EH        09800H    ldr      r0,[sp]
.  1208    010000D50H        09901H    ldr      r1,[sp,#4]
    ELSE
.  1210    010000D52H        04A11H    ldr      r2,[pc,#68] -> 1280 ; Global: 02002FFB8H
.  1212    010000D54H        06812H    ldr      r2,[r2]
.  1214    010000D56H        02A00H    cmp      r2,#0
.  1216    010000D58H        0D101H    bne.n    2 -> 1222
.  1218    010000D5AH        0DF05H    svc      5
.  1220    010000D5CH   <LineNo: 117>
.  1222    010000D5EH        03201H    adds     r2,#1
.  1224    010000D60H        04790H    blx      r2
.  1226    010000D62H        0E000H    b        0 -> 1230
.  1228    010000D64H   <LineNo: 117>
      msg := "unknown error"
.  1230    010000D66H        0E012H    b        36 -> 1270
.  1232    010000D68H        046C0H    nop
    END
.  1234    010000D6AH        09801H    ldr      r0,[sp,#4]
.  1236    010000D6CH        0A100H    adr      r1,pc,#0 -> 1240
.  1238    010000D6EH        0E007H    b        14 -> 1256
.  1240    010000D70H   <String: "unkn">
.  1244    010000D74H   <String: "own ">
.  1248    010000D78H   <String: "erro">
.  1252    010000D7CH   <String: "r...">
.  1256    010000D80H        04B04H    ldr      r3,[pc,#16] -> 1276 ; Const: 0FF000000H -16777216
.  1258    010000D82H        0680AH    ldr      r2,[r1]
.  1260    010000D84H        03104H    adds     r1,#4
.  1262    010000D86H        06002H    str      r2,[r0]
.  1264    010000D88H        03004H    adds     r0,#4
.  1266    010000D8AH        0401AH    ands     r2,r3
.  1268    010000D8CH        0D1F9H    bne.n    -14 -> 1258
  END errorMessage;
.  1270    010000D8EH        0B002H    add      sp,#8
.  1272    010000D90H        0BD00H    pop      { pc }
.  1274    010000D92H        046C0H    nop
.  1276    010000D94H   <Const: 0FF000000H -16777216>
.  1280    010000D98H   <Global: 02002FFB8H>


  PROCEDURE Msg*(code: INTEGER; VAR msg: String);
  BEGIN
.  1284    010000D9CH        0B503H    push     { r0, r1, lr }
    IF code < 0 THEN
.  1286    010000D9EH        09800H    ldr      r0,[sp]
.  1288    010000DA0H        02800H    cmp      r0,#0
.  1290    010000DA2H        0DB01H    blt.n    2 -> 1296
.  1292    010000DA4H        0E008H    b        16 -> 1312
.  1294    010000DA6H        046C0H    nop
      faultMessage(code, msg)
.  1296    010000DA8H        09800H    ldr      r0,[sp]
.  1298    010000DAAH        09901H    ldr      r1,[sp,#4]
    ELSE
.  1300    010000DACH    0F7FFFD76H    bl.w     Errors.faultMessage
.  1304    010000DB0H        0E000H    b        0 -> 1308
.  1306    010000DB2H   <LineNo: 127>
      errorMessage(code, msg)
.  1308    010000DB4H        0E006H    b        12 -> 1324
.  1310    010000DB6H        046C0H    nop
.  1312    010000DB8H        09800H    ldr      r0,[sp]
.  1314    010000DBAH        09901H    ldr      r1,[sp,#4]
    END
.  1316    010000DBCH    0F7FFFE02H    bl.w     Errors.errorMessage
.  1320    010000DC0H        0E000H    b        0 -> 1324
.  1322    010000DC2H   <LineNo: 129>
  END Msg;
.  1324    010000DC4H        0B002H    add      sp,#8
.  1326    010000DC6H        0BD00H    pop      { pc }

  PROCEDURE GetExceptionType*(code: INTEGER; VAR msg: String);
  BEGIN
.  1328    010000DC8H        0B503H    push     { r0, r1, lr }
    IF code < 0 THEN
.  1330    010000DCAH        09800H    ldr      r0,[sp]
.  1332    010000DCCH        02800H    cmp      r0,#0
.  1334    010000DCEH        0DB01H    blt.n    2 -> 1340
.  1336    010000DD0H        0E013H    b        38 -> 1378
.  1338    010000DD2H        046C0H    nop
      msg := "mcu fault"
    ELSE
.  1340    010000DD4H        09801H    ldr      r0,[sp,#4]
.  1342    010000DD6H        046C0H    nop
.  1344    010000DD8H        0A100H    adr      r1,pc,#0 -> 1348
.  1346    010000DDAH        0E005H    b        10 -> 1360
.  1348    010000DDCH   <String: "mcu ">
.  1352    010000DE0H   <String: "faul">
.  1356    010000DE4H   <String: "t...">
.  1360    010000DE8H        04B0EH    ldr      r3,[pc,#56] -> 1420 ; Const: 0FF000000H -16777216
.  1362    010000DEAH        0680AH    ldr      r2,[r1]
.  1364    010000DECH        03104H    adds     r1,#4
.  1366    010000DEEH        06002H    str      r2,[r0]
.  1368    010000DF0H        03004H    adds     r0,#4
.  1370    010000DF2H        0401AH    ands     r2,r3
.  1372    010000DF4H        0D1F9H    bne.n    -14 -> 1362
      msg := "run-time error"
.  1374    010000DF6H        0E012H    b        36 -> 1414
.  1376    010000DF8H        046C0H    nop
    END
.  1378    010000DFAH        09801H    ldr      r0,[sp,#4]
.  1380    010000DFCH        0A100H    adr      r1,pc,#0 -> 1384
.  1382    010000DFEH        0E007H    b        14 -> 1400
.  1384    010000E00H   <String: "run-">
.  1388    010000E04H   <String: "time">
.  1392    010000E08H   <String: " err">
.  1396    010000E0CH   <String: "or..">
.  1400    010000E10H        04B04H    ldr      r3,[pc,#16] -> 1420 ; Const: 0FF000000H -16777216
.  1402    010000E12H        0680AH    ldr      r2,[r1]
.  1404    010000E14H        03104H    adds     r1,#4
.  1406    010000E16H        06002H    str      r2,[r0]
.  1408    010000E18H        03004H    adds     r0,#4
.  1410    010000E1AH        0401AH    ands     r2,r3
.  1412    010000E1CH        0D1F9H    bne.n    -14 -> 1402
  END GetExceptionType;
.  1414    010000E1EH        0B002H    add      sp,#8
.  1416    010000E20H        0BD00H    pop      { pc }
.  1418    010000E22H        046C0H    nop
.  1420    010000E24H   <Const: 0FF000000H -16777216>

END Errors.
.  1424    010000E28H        0B500H    push     { lr }
.  1426    010000E2AH        0BD00H    pop      { pc }