.     0  <Pad: 0>
MODULE ResData;
(** =========================================================================
   Astrobe Library Functions for Resource Data

   (c) 2009-2021 CFB Software
   https://www.astrobe.com

   ========================================================================= *)

IMPORT Error, LinkOptions, SYSTEM;

CONST
  (* ID: "OB7R" in hex *)
  OB7R = 05237424FH;
  VersionOffset = 4;
  NameOffset = 8;
  TypeOffset = 16;
  BytesOffset = 20;
  DataOffset = 24;

  (* Data type *)
  Binary* = 0;
  Text* = 1;

TYPE
  Name = ARRAY 12 OF CHAR;
  Resource* = RECORD
    dataStart, nBytes, nItems: INTEGER
  END;
.     4  <Type: 12>
.     8  <Type: 0>
.    12  <Type: 0>
.    16  <Type: 0>
.    20  <Type: 0>

  DirEntry* = RECORD
    name*: Name;
    size*: INTEGER
  END;
.    24  <Type: 16>
.    28  <Type: 0>
.    32  <Type: 0>
.    36  <Type: 0>
.    40  <Type: 0>


  PROCEDURE* Size*(r: Resource): INTEGER;
    RETURN r.nBytes
.    44    02CH  0B503H          push     { r0, r1, lr }
  END Size;
.    46    02EH  09800H          ldr      r0,[sp]
.    48    030H  06840H          ldr      r0,[r0,#4]
.    50    032H  0B002H          add      sp,#8
.    52    034H  0BD00H          pop      { pc }
.    54    036H  046C0H          nop


  PROCEDURE* GetInt*(r: Resource; index: INTEGER; VAR data: INTEGER);
  BEGIN
.    56    038H  0B50FH          push     { r0, r1, r2, r3, lr }
    ASSERT(index <= r.nItems, Error.index);
.    58    03AH  09802H          ldr      r0,[sp,#8]
.    60    03CH  09900H          ldr      r1,[sp]
.    62    03EH  06889H          ldr      r1,[r1,#8]
.    64    040H  04288H          cmp      r0,r1
.    66    042H  0DD01H          ble.n    2 -> 72
.    68    044H  0DF16H          svc      22
.    70  <LineNo: 44>
    SYSTEM.GET(r.dataStart + (index * 4), data)
.    72    048H  09802H          ldr      r0,[sp,#8]
.    74    04AH  00080H          lsls     r0,r0,#2
.    76    04CH  09900H          ldr      r1,[sp]
.    78    04EH  06809H          ldr      r1,[r1]
.    80    050H  01808H          adds     r0,r1,r0
  END GetInt;
.    82    052H  06801H          ldr      r1,[r0]
.    84    054H  09A03H          ldr      r2,[sp,#12]
.    86    056H  06011H          str      r1,[r2]
.    88    058H  0B004H          add      sp,#16
.    90    05AH  0BD00H          pop      { pc }


  PROCEDURE* GetByte*(r: Resource; index: INTEGER; VAR data: BYTE);
  BEGIN
.    92    05CH  0B50FH          push     { r0, r1, r2, r3, lr }
    ASSERT(index <= r.nBytes, Error.index);
.    94    05EH  09802H          ldr      r0,[sp,#8]
.    96    060H  09900H          ldr      r1,[sp]
.    98    062H  06849H          ldr      r1,[r1,#4]
.   100    064H  04288H          cmp      r0,r1
.   102    066H  0DD01H          ble.n    2 -> 108
.   104    068H  0DF16H          svc      22
.   106  <LineNo: 51>
    SYSTEM.GET(r.dataStart + index, data)
.   108    06CH  09800H          ldr      r0,[sp]
.   110    06EH  06800H          ldr      r0,[r0]
.   112    070H  09902H          ldr      r1,[sp,#8]
.   114    072H  01840H          adds     r0,r0,r1
  END GetByte;
.   116    074H  07801H          ldrb     r1,[r0]
.   118    076H  09A03H          ldr      r2,[sp,#12]
.   120    078H  07011H          strb     r1,[r2]
.   122    07AH  0B004H          add      sp,#16
.   124    07CH  0BD00H          pop      { pc }
.   126    07EH  046C0H          nop


  PROCEDURE* GetChar*(r: Resource; index: INTEGER; VAR ch: CHAR);
  BEGIN
.   128    080H  0B50FH          push     { r0, r1, r2, r3, lr }
    ASSERT(index <= r.nBytes, Error.index);
.   130    082H  09802H          ldr      r0,[sp,#8]
.   132    084H  09900H          ldr      r1,[sp]
.   134    086H  06849H          ldr      r1,[r1,#4]
.   136    088H  04288H          cmp      r0,r1
.   138    08AH  0DD01H          ble.n    2 -> 144
.   140    08CH  0DF16H          svc      22
.   142  <LineNo: 58>
    SYSTEM.GET(r.dataStart + index, ch)
.   144    090H  09800H          ldr      r0,[sp]
.   146    092H  06800H          ldr      r0,[r0]
.   148    094H  09902H          ldr      r1,[sp,#8]
.   150    096H  01840H          adds     r0,r0,r1
  END GetChar;
.   152    098H  07801H          ldrb     r1,[r0]
.   154    09AH  09A03H          ldr      r2,[sp,#12]
.   156    09CH  07011H          strb     r1,[r2]
.   158    09EH  0B004H          add      sp,#16
.   160    0A0H  0BD00H          pop      { pc }
.   162    0A2H  046C0H          nop


  PROCEDURE* GetIntArray*(r: Resource; index: INTEGER; count: INTEGER; VAR items: ARRAY OF INTEGER): INTEGER;
  VAR
    i, p: INTEGER;
  BEGIN
.   164    0A4H  0B53FH          push     { r0, r1, r2, r3, r4, r5, lr }
.   166    0A6H  0B082H          sub      sp,#8
    ASSERT(index <= r.nItems, Error.index);
.   168    0A8H  09804H          ldr      r0,[sp,#16]
.   170    0AAH  09902H          ldr      r1,[sp,#8]
.   172    0ACH  06889H          ldr      r1,[r1,#8]
.   174    0AEH  04288H          cmp      r0,r1
.   176    0B0H  0DD01H          ble.n    2 -> 182
.   178    0B2H  0DF16H          svc      22
.   180  <LineNo: 67>
    IF index + count > r.nItems THEN count := r.nItems - index + 1 END;
.   182    0B6H  09804H          ldr      r0,[sp,#16]
.   184    0B8H  09905H          ldr      r1,[sp,#20]
.   186    0BAH  01840H          adds     r0,r0,r1
.   188    0BCH  09902H          ldr      r1,[sp,#8]
.   190    0BEH  06889H          ldr      r1,[r1,#8]
.   192    0C0H  04288H          cmp      r0,r1
.   194    0C2H  0DC01H          bgt.n    2 -> 200
.   196    0C4H  0E006H          b        12 -> 212
.   198    0C6H  046C0H          nop
.   200    0C8H  09802H          ldr      r0,[sp,#8]
.   202    0CAH  06880H          ldr      r0,[r0,#8]
.   204    0CCH  09904H          ldr      r1,[sp,#16]
.   206    0CEH  01A40H          subs     r0,r0,r1
.   208    0D0H  03001H          adds     r0,#1
.   210    0D2H  09005H          str      r0,[sp,#20]
    ASSERT(count <= LEN(items), Error.index);
.   212    0D4H  09805H          ldr      r0,[sp,#20]
.   214    0D6H  09907H          ldr      r1,[sp,#28]
.   216    0D8H  04288H          cmp      r0,r1
.   218    0DAH  0DD01H          ble.n    2 -> 224
.   220    0DCH  0DF16H          svc      22
.   222  <LineNo: 69>
    p := r.dataStart + (index * 4);
.   224    0E0H  09804H          ldr      r0,[sp,#16]
.   226    0E2H  00080H          lsls     r0,r0,#2
.   228    0E4H  09902H          ldr      r1,[sp,#8]
.   230    0E6H  06809H          ldr      r1,[r1]
.   232    0E8H  01808H          adds     r0,r1,r0
.   234    0EAH  09001H          str      r0,[sp,#4]
    FOR i := 0 TO count - 1 DO
.   236    0ECH  02000H          movs     r0,#0
.   238    0EEH  09000H          str      r0,[sp]
.   240    0F0H  09805H          ldr      r0,[sp,#20]
.   242    0F2H  03801H          subs     r0,#1
      SYSTEM.GET(p, items[i]);
.   244    0F4H  09900H          ldr      r1,[sp]
.   246    0F6H  04281H          cmp      r1,r0
.   248    0F8H  0DD01H          ble.n    2 -> 254
.   250    0FAH  0E00EH          b        28 -> 282
.   252    0FCH  046C0H          nop
.   254    0FEH  09800H          ldr      r0,[sp]
.   256   0100H  09906H          ldr      r1,[sp,#24]
.   258   0102H  00080H          lsls     r0,r0,#2
.   260   0104H  01808H          adds     r0,r1,r0
.   262   0106H  09901H          ldr      r1,[sp,#4]
.   264   0108H  0680AH          ldr      r2,[r1]
.   266   010AH  06002H          str      r2,[r0]
      INC(p, 4)
    END;
.   268   010CH  09801H          ldr      r0,[sp,#4]
.   270   010EH  03004H          adds     r0,#4
.   272   0110H  09001H          str      r0,[sp,#4]
.   274   0112H  09800H          ldr      r0,[sp]
.   276   0114H  03001H          adds     r0,#1
.   278   0116H  09000H          str      r0,[sp]
.   280   0118H  0E7EAH          b        -44 -> 240
    RETURN count
  END GetIntArray;
.   282   011AH  09805H          ldr      r0,[sp,#20]
.   284   011CH  0B008H          add      sp,#32
.   286   011EH  0BD00H          pop      { pc }


  PROCEDURE* GetReal*(r: Resource; index: INTEGER; VAR data: REAL);
  BEGIN
.   288   0120H  0B50FH          push     { r0, r1, r2, r3, lr }
    ASSERT(index < r.nItems, Error.index);
.   290   0122H  09802H          ldr      r0,[sp,#8]
.   292   0124H  09900H          ldr      r1,[sp]
.   294   0126H  06889H          ldr      r1,[r1,#8]
.   296   0128H  04288H          cmp      r0,r1
.   298   012AH  0DB01H          blt.n    2 -> 304
.   300   012CH  0DF16H          svc      22
.   302  <LineNo: 81>
    SYSTEM.GET(r.dataStart + (index * 4), data)
.   304   0130H  09802H          ldr      r0,[sp,#8]
.   306   0132H  00080H          lsls     r0,r0,#2
.   308   0134H  09900H          ldr      r1,[sp]
.   310   0136H  06809H          ldr      r1,[r1]
.   312   0138H  01808H          adds     r0,r1,r0
  END GetReal;
.   314   013AH  06801H          ldr      r1,[r0]
.   316   013CH  09A03H          ldr      r2,[sp,#12]
.   318   013EH  06011H          str      r1,[r2]
.   320   0140H  0B004H          add      sp,#16
.   322   0142H  0BD00H          pop      { pc }


  PROCEDURE* GetRealArray*(r: Resource; index: INTEGER; count: INTEGER; VAR items: ARRAY OF REAL): INTEGER;
  VAR
    i, p: INTEGER;
  BEGIN
.   324   0144H  0B53FH          push     { r0, r1, r2, r3, r4, r5, lr }
.   326   0146H  0B082H          sub      sp,#8
    ASSERT(index <= r.nItems, Error.index);
.   328   0148H  09804H          ldr      r0,[sp,#16]
.   330   014AH  09902H          ldr      r1,[sp,#8]
.   332   014CH  06889H          ldr      r1,[r1,#8]
.   334   014EH  04288H          cmp      r0,r1
.   336   0150H  0DD01H          ble.n    2 -> 342
.   338   0152H  0DF16H          svc      22
.   340  <LineNo: 90>
    IF index + count > r.nItems THEN count := r.nItems - index + 1 END;
.   342   0156H  09804H          ldr      r0,[sp,#16]
.   344   0158H  09905H          ldr      r1,[sp,#20]
.   346   015AH  01840H          adds     r0,r0,r1
.   348   015CH  09902H          ldr      r1,[sp,#8]
.   350   015EH  06889H          ldr      r1,[r1,#8]
.   352   0160H  04288H          cmp      r0,r1
.   354   0162H  0DC01H          bgt.n    2 -> 360
.   356   0164H  0E006H          b        12 -> 372
.   358   0166H  046C0H          nop
.   360   0168H  09802H          ldr      r0,[sp,#8]
.   362   016AH  06880H          ldr      r0,[r0,#8]
.   364   016CH  09904H          ldr      r1,[sp,#16]
.   366   016EH  01A40H          subs     r0,r0,r1
.   368   0170H  03001H          adds     r0,#1
.   370   0172H  09005H          str      r0,[sp,#20]
    ASSERT(count <= LEN(items), Error.index);
.   372   0174H  09805H          ldr      r0,[sp,#20]
.   374   0176H  09907H          ldr      r1,[sp,#28]
.   376   0178H  04288H          cmp      r0,r1
.   378   017AH  0DD01H          ble.n    2 -> 384
.   380   017CH  0DF16H          svc      22
.   382  <LineNo: 92>
    p := r.dataStart + (index * 4);
.   384   0180H  09804H          ldr      r0,[sp,#16]
.   386   0182H  00080H          lsls     r0,r0,#2
.   388   0184H  09902H          ldr      r1,[sp,#8]
.   390   0186H  06809H          ldr      r1,[r1]
.   392   0188H  01808H          adds     r0,r1,r0
.   394   018AH  09001H          str      r0,[sp,#4]
    FOR i := 0 TO count - 1 DO
.   396   018CH  02000H          movs     r0,#0
.   398   018EH  09000H          str      r0,[sp]
.   400   0190H  09805H          ldr      r0,[sp,#20]
.   402   0192H  03801H          subs     r0,#1
      SYSTEM.GET(p, items[i]);
.   404   0194H  09900H          ldr      r1,[sp]
.   406   0196H  04281H          cmp      r1,r0
.   408   0198H  0DD01H          ble.n    2 -> 414
.   410   019AH  0E00EH          b        28 -> 442
.   412   019CH  046C0H          nop
.   414   019EH  09800H          ldr      r0,[sp]
.   416   01A0H  09906H          ldr      r1,[sp,#24]
.   418   01A2H  00080H          lsls     r0,r0,#2
.   420   01A4H  01808H          adds     r0,r1,r0
.   422   01A6H  09901H          ldr      r1,[sp,#4]
.   424   01A8H  0680AH          ldr      r2,[r1]
.   426   01AAH  06002H          str      r2,[r0]
      INC(p, 4)
    END;
.   428   01ACH  09801H          ldr      r0,[sp,#4]
.   430   01AEH  03004H          adds     r0,#4
.   432   01B0H  09001H          str      r0,[sp,#4]
.   434   01B2H  09800H          ldr      r0,[sp]
.   436   01B4H  03001H          adds     r0,#1
.   438   01B6H  09000H          str      r0,[sp]
.   440   01B8H  0E7EAH          b        -44 -> 400
    RETURN count
  END GetRealArray;
.   442   01BAH  09805H          ldr      r0,[sp,#20]
.   444   01BCH  0B008H          add      sp,#32
.   446   01BEH  0BD00H          pop      { pc }


  PROCEDURE* GetName(adr: INTEGER; VAR resName: Name);
  VAR
    i: INTEGER;
    s: ARRAY 4 OF CHAR;
  BEGIN
.   448   01C0H  0B503H          push     { r0, r1, lr }
.   450   01C2H  0B082H          sub      sp,#8
    SYSTEM.GET(adr, s);
.   452   01C4H  09802H          ldr      r0,[sp,#8]
.   454   01C6H  06801H          ldr      r1,[r0]
.   456   01C8H  09101H          str      r1,[sp,#4]
    FOR i := 0 TO 3 DO resName[i] := s[i] END;
.   458   01CAH  02000H          movs     r0,#0
.   460   01CCH  09000H          str      r0,[sp]
.   462   01CEH  09800H          ldr      r0,[sp]
.   464   01D0H  02803H          cmp      r0,#3
.   466   01D2H  0DD01H          ble.n    2 -> 472
.   468   01D4H  0E00CH          b        24 -> 496
.   470   01D6H  046C0H          nop
.   472   01D8H  09800H          ldr      r0,[sp]
.   474   01DAH  09903H          ldr      r1,[sp,#12]
.   476   01DCH  01808H          adds     r0,r1,r0
.   478   01DEH  09900H          ldr      r1,[sp]
.   480   01E0H  0466AH          mov      r2,sp
.   482   01E2H  01851H          adds     r1,r2,r1
.   484   01E4H  07909H          ldrb     r1,[r1,#4]
.   486   01E6H  07001H          strb     r1,[r0]
.   488   01E8H  09800H          ldr      r0,[sp]
.   490   01EAH  03001H          adds     r0,#1
.   492   01ECH  09000H          str      r0,[sp]
.   494   01EEH  0E7EEH          b        -36 -> 462
    SYSTEM.GET(adr + 4, s);
.   496   01F0H  09802H          ldr      r0,[sp,#8]
.   498   01F2H  03004H          adds     r0,#4
.   500   01F4H  06801H          ldr      r1,[r0]
.   502   01F6H  09101H          str      r1,[sp,#4]
    FOR i := 0 TO 3 DO resName[i + 4] := s[i] END;
.   504   01F8H  02000H          movs     r0,#0
.   506   01FAH  09000H          str      r0,[sp]
.   508   01FCH  09800H          ldr      r0,[sp]
.   510   01FEH  02803H          cmp      r0,#3
.   512   0200H  0DD01H          ble.n    2 -> 518
.   514   0202H  0E00DH          b        26 -> 544
.   516   0204H  046C0H          nop
.   518   0206H  09800H          ldr      r0,[sp]
.   520   0208H  03004H          adds     r0,#4
.   522   020AH  09903H          ldr      r1,[sp,#12]
.   524   020CH  01808H          adds     r0,r1,r0
.   526   020EH  09900H          ldr      r1,[sp]
.   528   0210H  0466AH          mov      r2,sp
.   530   0212H  01851H          adds     r1,r2,r1
.   532   0214H  07909H          ldrb     r1,[r1,#4]
.   534   0216H  07001H          strb     r1,[r0]
.   536   0218H  09800H          ldr      r0,[sp]
.   538   021AH  03001H          adds     r0,#1
.   540   021CH  09000H          str      r0,[sp]
.   542   021EH  0E7EDH          b        -38 -> 508
    resName[8] := 0X
  END GetName;
.   544   0220H  02000H          movs     r0,#0
.   546   0222H  09903H          ldr      r1,[sp,#12]
.   548   0224H  07208H          strb     r0,[r1,#8]
.   550   0226H  0B004H          add      sp,#16
.   552   0228H  0BD00H          pop      { pc }
.   554   022AH  046C0H          nop


  PROCEDURE* Count*(): INTEGER;
  VAR
    i, resSize, resStart: INTEGER;
    id: INTEGER;
  BEGIN
.   556   022CH  0B500H          push     { lr }
.   558   022EH  0B084H          sub      sp,#16
    resStart := LinkOptions.ResourceStart;
.   560   0230H  04811H          ldr      r0,[pc,#68] -> 632
.   562   0232H  06800H          ldr      r0,[r0]
.   564   0234H  09002H          str      r0,[sp,#8]
    SYSTEM.GET(resStart, id);
.   566   0236H  09802H          ldr      r0,[sp,#8]
.   568   0238H  06801H          ldr      r1,[r0]
.   570   023AH  09103H          str      r1,[sp,#12]
    i := 0;
.   572   023CH  02000H          movs     r0,#0
.   574   023EH  09000H          str      r0,[sp]
    WHILE (id = OB7R) DO
.   576   0240H  09803H          ldr      r0,[sp,#12]
.   578   0242H  0490CH          ldr      r1,[pc,#48] -> 628
.   580   0244H  04288H          cmp      r0,r1
.   582   0246H  0D001H          beq.n    2 -> 588
.   584   0248H  0E010H          b        32 -> 620
.   586   024AH  046C0H          nop
      SYSTEM.GET(resStart + BytesOffset, resSize);
.   588   024CH  09802H          ldr      r0,[sp,#8]
.   590   024EH  03014H          adds     r0,#20
.   592   0250H  06801H          ldr      r1,[r0]
.   594   0252H  09101H          str      r1,[sp,#4]
      resStart := resStart + DataOffset + resSize;
.   596   0254H  09802H          ldr      r0,[sp,#8]
.   598   0256H  03018H          adds     r0,#24
.   600   0258H  09901H          ldr      r1,[sp,#4]
.   602   025AH  01840H          adds     r0,r0,r1
.   604   025CH  09002H          str      r0,[sp,#8]
      SYSTEM.GET(resStart, id);
.   606   025EH  09802H          ldr      r0,[sp,#8]
.   608   0260H  06801H          ldr      r1,[r0]
.   610   0262H  09103H          str      r1,[sp,#12]
      INC(i)
    END;
.   612   0264H  09800H          ldr      r0,[sp]
.   614   0266H  03001H          adds     r0,#1
.   616   0268H  09000H          str      r0,[sp]
.   618   026AH  0E7E9H          b        -46 -> 576
    RETURN i
  END Count;
.   620   026CH  09800H          ldr      r0,[sp]
.   622   026EH  0B004H          add      sp,#16
.   624   0270H  0BD00H          pop      { pc }
.   626   0272H  046C0H          nop
.   628  <Const: 05237424FH  05237424FH>
.   632  <Global: 000050000H  050000H>


  PROCEDURE GetDirectory*(VAR list: ARRAY OF DirEntry);
  VAR
    i, resStart, resSize: INTEGER;
    id: INTEGER;
  BEGIN
.   636   027CH  0B503H          push     { r0, r1, lr }
.   638   027EH  0B084H          sub      sp,#16
    resStart := LinkOptions.ResourceStart;
.   640   0280H  04820H          ldr      r0,[pc,#128] -> 772
.   642   0282H  06800H          ldr      r0,[r0]
.   644   0284H  09001H          str      r0,[sp,#4]
    SYSTEM.GET(resStart, id);
.   646   0286H  09801H          ldr      r0,[sp,#4]
.   648   0288H  06801H          ldr      r1,[r0]
.   650   028AH  09103H          str      r1,[sp,#12]
    i := 0;
.   652   028CH  02000H          movs     r0,#0
.   654   028EH  09000H          str      r0,[sp]
    WHILE (id = OB7R) & (i < LEN(list)) DO
.   656   0290H  09803H          ldr      r0,[sp,#12]
.   658   0292H  0491BH          ldr      r1,[pc,#108] -> 768
.   660   0294H  04288H          cmp      r0,r1
.   662   0296H  0D001H          beq.n    2 -> 668
.   664   0298H  0E030H          b        96 -> 764
.   666   029AH  046C0H          nop
.   668   029CH  09800H          ldr      r0,[sp]
.   670   029EH  09905H          ldr      r1,[sp,#20]
.   672   02A0H  04288H          cmp      r0,r1
.   674   02A2H  0DB01H          blt.n    2 -> 680
.   676   02A4H  0E02AH          b        84 -> 764
.   678   02A6H  046C0H          nop
      GetName(resStart + NameOffset, list[i].name);
.   680   02A8H  09801H          ldr      r0,[sp,#4]
.   682   02AAH  03008H          adds     r0,#8
.   684   02ACH  09900H          ldr      r1,[sp]
.   686   02AEH  09A05H          ldr      r2,[sp,#20]
.   688   02B0H  04291H          cmp      r1,r2
.   690   02B2H  0D301H          bcc.n    2 -> 696
.   692   02B4H  0DF01H          svc      1
.   694  <LineNo: 142>
.   696   02B8H  09A04H          ldr      r2,[sp,#16]
.   698   02BAH  00109H          lsls     r1,r1,#4
.   700   02BCH  01851H          adds     r1,r2,r1
.   702   02BEH  0F7FFFF7FH      bl.w     -258 -> 448
.   706   02C2H  0E000H          b        0 -> 710
.   708  <LineNo: 142>
      SYSTEM.GET(resStart + BytesOffset, resSize);
.   710   02C6H  09801H          ldr      r0,[sp,#4]
.   712   02C8H  03014H          adds     r0,#20
.   714   02CAH  06801H          ldr      r1,[r0]
.   716   02CCH  09102H          str      r1,[sp,#8]
      list[i].size := resSize;
.   718   02CEH  09800H          ldr      r0,[sp]
.   720   02D0H  09905H          ldr      r1,[sp,#20]
.   722   02D2H  04288H          cmp      r0,r1
.   724   02D4H  0D301H          bcc.n    2 -> 730
.   726   02D6H  0DF01H          svc      1
.   728  <LineNo: 144>
.   730   02DAH  09904H          ldr      r1,[sp,#16]
.   732   02DCH  00100H          lsls     r0,r0,#4
.   734   02DEH  01808H          adds     r0,r1,r0
.   736   02E0H  09902H          ldr      r1,[sp,#8]
.   738   02E2H  060C1H          str      r1,[r0,#12]
      resStart := resStart + DataOffset + resSize;
.   740   02E4H  09801H          ldr      r0,[sp,#4]
.   742   02E6H  03018H          adds     r0,#24
.   744   02E8H  09902H          ldr      r1,[sp,#8]
.   746   02EAH  01840H          adds     r0,r0,r1
.   748   02ECH  09001H          str      r0,[sp,#4]
      SYSTEM.GET(resStart, id);
.   750   02EEH  09801H          ldr      r0,[sp,#4]
.   752   02F0H  06801H          ldr      r1,[r0]
.   754   02F2H  09103H          str      r1,[sp,#12]
      INC(i)
    END
.   756   02F4H  09800H          ldr      r0,[sp]
.   758   02F6H  03001H          adds     r0,#1
.   760   02F8H  09000H          str      r0,[sp]
.   762   02FAH  0E7C9H          b        -110 -> 656
  END GetDirectory;
.   764   02FCH  0B006H          add      sp,#24
.   766   02FEH  0BD00H          pop      { pc }
.   768  <Const: 05237424FH  05237424FH>
.   772  <Global: 00005013CH  05013CH>


  PROCEDURE Open*(VAR r: Resource; name: ARRAY OF CHAR);
  VAR
    version, dataType, resStart, resSize: INTEGER;
    id: INTEGER;
    resName: Name;
  BEGIN
.   776   0308H  0B50FH          push     { r0, r1, r2, r3, lr }
.   778   030AH  0B088H          sub      sp,#32
    r.nBytes := 0;
.   780   030CH  02000H          movs     r0,#0
.   782   030EH  09908H          ldr      r1,[sp,#32]
.   784   0310H  06048H          str      r0,[r1,#4]
    r.dataStart := 0;
.   786   0312H  02000H          movs     r0,#0
.   788   0314H  09908H          ldr      r1,[sp,#32]
.   790   0316H  06008H          str      r0,[r1]
    r.nItems := 0;
.   792   0318H  02000H          movs     r0,#0
.   794   031AH  09908H          ldr      r1,[sp,#32]
.   796   031CH  06088H          str      r0,[r1,#8]
    resStart := LinkOptions.ResourceStart;
.   798   031EH  04828H          ldr      r0,[pc,#160] -> 960
.   800   0320H  06800H          ldr      r0,[r0]
.   802   0322H  09002H          str      r0,[sp,#8]
    SYSTEM.GET(resStart, id);
.   804   0324H  09802H          ldr      r0,[sp,#8]
.   806   0326H  06801H          ldr      r1,[r0]
.   808   0328H  09104H          str      r1,[sp,#16]
    ASSERT(id = OB7R, Error.data);
.   810   032AH  09804H          ldr      r0,[sp,#16]
.   812   032CH  04923H          ldr      r1,[pc,#140] -> 956
.   814   032EH  04288H          cmp      r0,r1
.   816   0330H  0D001H          beq.n    2 -> 822
.   818   0332H  0DF15H          svc      21
.   820  <LineNo: 163>
    WHILE id = OB7R DO
.   822   0336H  09804H          ldr      r0,[sp,#16]
.   824   0338H  04920H          ldr      r1,[pc,#128] -> 956
.   826   033AH  04288H          cmp      r0,r1
.   828   033CH  0D001H          beq.n    2 -> 834
.   830   033EH  0E03AH          b        116 -> 950
.   832   0340H  046C0H          nop
      GetName(resStart + NameOffset, resName);
.   834   0342H  09802H          ldr      r0,[sp,#8]
.   836   0344H  03008H          adds     r0,#8
.   838   0346H  0A905H          add      r1,sp,#20
.   840   0348H  0F7FFFF3AH      bl.w     -396 -> 448
.   844   034CH  0E000H          b        0 -> 848
.   846  <LineNo: 165>
      SYSTEM.GET(resStart + VersionOffset, version);
.   848   0350H  09802H          ldr      r0,[sp,#8]
.   850   0352H  03004H          adds     r0,#4
.   852   0354H  06801H          ldr      r1,[r0]
.   854   0356H  09100H          str      r1,[sp]
      ASSERT(version = 1, Error.version);
.   856   0358H  09800H          ldr      r0,[sp]
.   858   035AH  02801H          cmp      r0,#1
.   860   035CH  0D001H          beq.n    2 -> 866
.   862   035EH  0DF17H          svc      23
.   864  <LineNo: 167>
      SYSTEM.GET(resStart + BytesOffset, resSize);
.   866   0362H  09802H          ldr      r0,[sp,#8]
.   868   0364H  03014H          adds     r0,#20
.   870   0366H  06801H          ldr      r1,[r0]
.   872   0368H  09103H          str      r1,[sp,#12]
      IF name = resName THEN
.   874   036AH  02000H          movs     r0,#0
.   876   036CH  0990AH          ldr      r1,[sp,#40]
.   878   036EH  0AA05H          add      r2,sp,#20
.   880   0370H  05C0BH          ldrb     r3,[r1,r0]
.   882   0372H  05C14H          ldrb     r4,[r2,r0]
.   884   0374H  03001H          adds     r0,#1
.   886   0376H  042A3H          cmp      r3,r4
.   888   0378H  0D101H          bne.n    2 -> 894
.   890   037AH  02B00H          cmp      r3,#0
.   892   037CH  0D1F8H          bne.n    -16 -> 880
.   894   037EH  0D001H          beq.n    2 -> 900
.   896   0380H  0E010H          b        32 -> 932
.   898   0382H  046C0H          nop
        r.nBytes := resSize;
.   900   0384H  09803H          ldr      r0,[sp,#12]
.   902   0386H  09908H          ldr      r1,[sp,#32]
.   904   0388H  06048H          str      r0,[r1,#4]
        SYSTEM.GET(resStart + TypeOffset, dataType);
.   906   038AH  09802H          ldr      r0,[sp,#8]
.   908   038CH  03010H          adds     r0,#16
.   910   038EH  06801H          ldr      r1,[r0]
.   912   0390H  09101H          str      r1,[sp,#4]
        r.dataStart := resStart + DataOffset;
.   914   0392H  09802H          ldr      r0,[sp,#8]
.   916   0394H  03018H          adds     r0,#24
.   918   0396H  09908H          ldr      r1,[sp,#32]
.   920   0398H  06008H          str      r0,[r1]
        r.nItems := r.nBytes DIV 4
      END;
.   922   039AH  09808H          ldr      r0,[sp,#32]
.   924   039CH  06840H          ldr      r0,[r0,#4]
.   926   039EH  01080H          asrs     r0,r0,#2
.   928   03A0H  09908H          ldr      r1,[sp,#32]
.   930   03A2H  06088H          str      r0,[r1,#8]
      resStart := resStart + DataOffset + resSize;
.   932   03A4H  09802H          ldr      r0,[sp,#8]
.   934   03A6H  03018H          adds     r0,#24
.   936   03A8H  09903H          ldr      r1,[sp,#12]
.   938   03AAH  01840H          adds     r0,r0,r1
.   940   03ACH  09002H          str      r0,[sp,#8]
      SYSTEM.GET(resStart, id)
    END
.   942   03AEH  09802H          ldr      r0,[sp,#8]
.   944   03B0H  06801H          ldr      r1,[r0]
.   946   03B2H  09104H          str      r1,[sp,#16]
.   948   03B4H  0E7BFH          b        -130 -> 822
  END Open;
.   950   03B6H  0B00CH          add      sp,#48
.   952   03B8H  0BD00H          pop      { pc }
.   954   03BAH  046C0H          nop
.   956  <Const: 05237424FH  05237424FH>
.   960  <Global: 000050182H  050182H>

END ResData.
.   964   03C4H  0B500H          push     { lr }
.   966   03C6H  0BD00H          pop      { pc }
