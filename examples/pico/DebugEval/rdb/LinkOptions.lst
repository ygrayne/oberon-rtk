.     0  <Pad: 0>
MODULE LinkOptions;
(* -------------------------------------------------------------------------
   Linker constant definitions from configuration file.
   If included in an application this must be the first module to be loded.

   Target: All Cortex-M microcontrollers

   (c) 2012-2023 CFB Software
   https://www.astrobe.com

   ------------------------------------------------------------------------- *)

IMPORT SYSTEM;

VAR
  OptionsStart: INTEGER;

  (* Startup parameters *)
  ConfigID*: INTEGER;
  HeapStart*: INTEGER;
  HeapLimit*: INTEGER;
  StackStart*: INTEGER;
  ResourceStart*: INTEGER;
  DataStart*: INTEGER;
  DataEnd*: INTEGER;
  cs, CodeStart*: INTEGER;
  CodeEnd*: INTEGER;

PROCEDURE* CodeStartAddress;
END CodeStartAddress;
.     4     04H  0B500H          push     { lr }
.     6     06H  0BD00H          pop      { pc }

PROCEDURE Init();
BEGIN
.     8     08H  0B500H          push     { lr }
  cs := SYSTEM.ADR(CodeStartAddress) - 244H;
.    10     0AH  046C0H          nop
.    12     0CH  04821H          ldr      r0,[pc,#132] -> 148
.    14     0EH  04478H          add      r0,pc
.    16    010H  02191H          movs     r1,#145
.    18    012H  00089H          lsls     r1,r1,#2
.    20    014H  01A40H          subs     r0,r0,r1
.    22    016H  04920H          ldr      r1,[pc,#128] -> 152
.    24    018H  06008H          str      r0,[r1]
  OptionsStart := cs + 200H;
.    26    01AH  0481FH          ldr      r0,[pc,#124] -> 152
.    28    01CH  06800H          ldr      r0,[r0]
.    30    01EH  02101H          movs     r1,#1
.    32    020H  00249H          lsls     r1,r1,#9
.    34    022H  01840H          adds     r0,r0,r1
.    36    024H  0491DH          ldr      r1,[pc,#116] -> 156
.    38    026H  06008H          str      r0,[r1]
  SYSTEM.GET(OptionsStart + 4, ConfigID);
.    40    028H  0481CH          ldr      r0,[pc,#112] -> 156
.    42    02AH  06800H          ldr      r0,[r0]
.    44    02CH  03004H          adds     r0,#4
.    46    02EH  06801H          ldr      r1,[r0]
.    48    030H  04A1BH          ldr      r2,[pc,#108] -> 160
.    50    032H  06011H          str      r1,[r2]
  SYSTEM.GET(OptionsStart + 8, HeapStart);
.    52    034H  04819H          ldr      r0,[pc,#100] -> 156
.    54    036H  06800H          ldr      r0,[r0]
.    56    038H  03008H          adds     r0,#8
.    58    03AH  06801H          ldr      r1,[r0]
.    60    03CH  04A19H          ldr      r2,[pc,#100] -> 164
.    62    03EH  06011H          str      r1,[r2]
  SYSTEM.GET(OptionsStart + 12, HeapLimit);
.    64    040H  04816H          ldr      r0,[pc,#88] -> 156
.    66    042H  06800H          ldr      r0,[r0]
.    68    044H  0300CH          adds     r0,#12
.    70    046H  06801H          ldr      r1,[r0]
.    72    048H  04A17H          ldr      r2,[pc,#92] -> 168
.    74    04AH  06011H          str      r1,[r2]
  SYSTEM.GET(OptionsStart + 16, ResourceStart);
.    76    04CH  04813H          ldr      r0,[pc,#76] -> 156
.    78    04EH  06800H          ldr      r0,[r0]
.    80    050H  03010H          adds     r0,#16
.    82    052H  06801H          ldr      r1,[r0]
.    84    054H  04A15H          ldr      r2,[pc,#84] -> 172
.    86    056H  06011H          str      r1,[r2]
  (* Module Initialisation Table = OptionsStart + 20 *)
  SYSTEM.GET(OptionsStart + 24, DataStart);
.    88    058H  04810H          ldr      r0,[pc,#64] -> 156
.    90    05AH  06800H          ldr      r0,[r0]
.    92    05CH  03018H          adds     r0,#24
.    94    05EH  06801H          ldr      r1,[r0]
.    96    060H  04A13H          ldr      r2,[pc,#76] -> 176
.    98    062H  06011H          str      r1,[r2]
  SYSTEM.GET(OptionsStart + 28,  DataEnd);
.   100    064H  0480DH          ldr      r0,[pc,#52] -> 156
.   102    066H  06800H          ldr      r0,[r0]
.   104    068H  0301CH          adds     r0,#28
.   106    06AH  06801H          ldr      r1,[r0]
.   108    06CH  04A11H          ldr      r2,[pc,#68] -> 180
.   110    06EH  06011H          str      r1,[r2]
  SYSTEM.GET(OptionsStart + 32, CodeStart);
.   112    070H  0480AH          ldr      r0,[pc,#40] -> 156
.   114    072H  06800H          ldr      r0,[r0]
.   116    074H  03020H          adds     r0,#32
.   118    076H  06801H          ldr      r1,[r0]
.   120    078H  04A0FH          ldr      r2,[pc,#60] -> 184
.   122    07AH  06011H          str      r1,[r2]
  SYSTEM.GET(OptionsStart + 36, CodeEnd);
.   124    07CH  04807H          ldr      r0,[pc,#28] -> 156
.   126    07EH  06800H          ldr      r0,[r0]
.   128    080H  03024H          adds     r0,#36
.   130    082H  06801H          ldr      r1,[r0]
.   132    084H  04A0DH          ldr      r2,[pc,#52] -> 188
.   134    086H  06011H          str      r1,[r2]
  SYSTEM.GET(CodeStart, StackStart)
END Init;
.   136    088H  0480BH          ldr      r0,[pc,#44] -> 184
.   138    08AH  06800H          ldr      r0,[r0]
.   140    08CH  06801H          ldr      r1,[r0]
.   142    08EH  04A0CH          ldr      r2,[pc,#48] -> 192
.   144    090H  06011H          str      r1,[r2]
.   146    092H  0BD00H          pop      { pc }
.   148  <Const: 0FFFFFFF2H  -14>
.   152  <Global: 000240000H  0240000H>
.   156  <Global: 00004004CH  04004CH>
.   160  <Global: 00008004EH  08004EH>
.   164  <Global: 0000C0050H  0C0050H>
.   168  <Global: 000100052H  0100052H>
.   172  <Global: 000180054H  0180054H>
.   176  <Global: 0001C0056H  01C0056H>
.   180  <Global: 000200058H  0200058H>
.   184  <Global: 00028005AH  028005AH>
.   188  <Global: 0002C005CH  02C005CH>
.   192  <Global: 00014005EH  014005EH>

BEGIN
.   196    0C4H  0B500H          push     { lr }
  Init()
END LinkOptions.
.   198    0C6H  0F7FFFF9FH      bl.w     -194 -> 8
.   202    0CAH  0E000H          b        0 -> 206
.   204  <LineNo: 49>
.   206    0CEH  0BD00H          pop      { pc }
