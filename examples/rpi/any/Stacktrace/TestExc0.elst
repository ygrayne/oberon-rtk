.     0  010004750H              <Pad: 0>
MODULE TestExc0;
(**
  Oberon RTK Framework v2
  --
  Example/test program
  https://oberon-rtk.org/examples/v2/stacktrace
  --
  MCU: RP2040, RP2350
  Board: Pico, Pico 2
  --
  Copyright (c) 2024 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, MCU := MCU2, Main, Out;

  CONST
    TestCase = 0;

  PROCEDURE fault;
  (* trigger MCU fault *)
    VAR x: INTEGER;
  BEGIN
.     4  010004754H      0B500H  push    { lr }
.     6  010004756H      0B081H  sub     sp,#4
    x := MCU.PPB_NVIC_ISER0 + 1;
.     8  010004758H  0F8DF000CH  ldr.w   r0,[pc,#12] -> 24
.    12  01000475CH      09000H  str     r0,[sp]
    SYSTEM.PUT(x, x)
  END fault;
.    14  01000475EH      09800H  ldr     r0,[sp]
.    16  010004760H      09900H  ldr     r1,[sp]
.    18  010004762H      06001H  str     r1,[r0]
.    20  010004764H      0B001H  add     sp,#4
.    22  010004766H      0BD00H  pop     { pc }
.    24  010004768H  0E000E101H  <Const:  -536813311>

  PROCEDURE p1;
  BEGIN
.    28  01000476CH      0B500H  push    { lr }
    fault
  END p1;
.    30  01000476EH  0F7FFFFF1H  bl.w    -30 -> 4
.    34  010004772H      0E000H  b       0 -> 38
.    36  010004774H      0001EH  <LineNo: 30>
.    38  010004776H      0BD00H  pop     { pc }

  PROCEDURE p0;
    CONST R12 = 12;
    (* VAR x, y, z: INTEGER; *)
  BEGIN
.    40  010004778H      0B500H  push    { lr }
    SYSTEM.LDREG(R12, 0A0B0C0DH); (* marker *)
.    42  01000477AH  0F8DFC00CH  ldr.w   r12,[pc,#12] -> 56
    p1
  END p0;
.    46  01000477EH  0F7FFFFF5H  bl.w    -22 -> 28
.    50  010004782H      0E000H  b       0 -> 54
.    52  010004784H      00026H  <LineNo: 38>
.    54  010004786H      0BD00H  pop     { pc }
.    56  010004788H  00A0B0C0DH  <Const:  168496141>

  PROCEDURE run;
  BEGIN
.    60  01000478CH      0B500H  push    { lr }
    Out.Ln; Out.String("TestCase = "); Out.Int(TestCase, 0); Out.Ln;
.    62  01000478EH  0F7FFFD03H  bl.w    Ext Proc #4
.    66  010004792H      0E000H  b       0 -> 70
.    68  010004794H      0002BH  <LineNo: 43>
.    70  010004796H      0BF00H  nop     
.    72  010004798H      0A000H  adr     r0,pc,#0 -> 76
.    74  01000479AH      0E005H  b       10 -> 88
.    76  01000479CH  074736554H  <String: "Test">
.    80  0100047A0H  065736143H  <String: "Case">
.    84  0100047A4H  000203D20H  <String: " = .">
.    88  0100047A8H      0210CH  movs    r1,#12
.    90  0100047AAH  0F7FFFCD9H  bl.w    Ext Proc #3
.    94  0100047AEH      0E000H  b       0 -> 98
.    96  0100047B0H      0002BH  <LineNo: 43>
.    98  0100047B2H      02000H  movs    r0,#0
.   100  0100047B4H      02100H  movs    r1,#0
.   102  0100047B6H  0F7FFFD09H  bl.w    Ext Proc #5
.   106  0100047BAH      0E000H  b       0 -> 110
.   108  0100047BCH      0002BH  <LineNo: 43>
.   110  0100047BEH  0F7FFFCEBH  bl.w    Ext Proc #4
.   114  0100047C2H      0E000H  b       0 -> 118
.   116  0100047C4H      0002BH  <LineNo: 43>
    p0
  END run;
.   118  0100047C6H  0F7FFFFD7H  bl.w    -82 -> 40
.   122  0100047CAH      0E000H  b       0 -> 126
.   124  0100047CCH      0002CH  <LineNo: 44>
.   126  0100047CEH      0BD00H  pop     { pc }

BEGIN
.   128  0100047D0H      0B500H  push    { lr }
  run
END TestExc0.
.   130  0100047D2H  0F7FFFFDBH  bl.w    -74 -> 60
.   134  0100047D6H      0E000H  b       0 -> 138
.   136  0100047D8H      00030H  <LineNo: 48>
.   138  0100047DAH      0BD00H  pop     { pc }
 