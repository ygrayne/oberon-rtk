.     0  01000557CH              <Pad: 0>
MODULE StacktrK2C2;
(**
  Oberon RTK Framework v2
  --
  Example/test program
  https://oberon-rtk.org/examples/v2/stacktrace
  --
  MCU: RP2040, RP2350
  Board: Pico, Pico 2
  --
  Copyright (c) 2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, MCU := MCU2, Main, Kernel, MultiCore, Errors, Exceptions, Memory, Out;

  CONST
    IntNo0 = MCU.PPB_SPAREIRQ_IRQ0;
    IntNo1 = MCU.PPB_SPAREIRQ_IRQ1;

    ThreadStackSize = 1024;
    MillisecsPerTick = 10;
    Core1 = 1;

  VAR
    p: PROCEDURE;


  PROCEDURE* i0[0];
    VAR x: INTEGER;
  BEGIN
.     4  010005580H  0F84DED04H  push.w    { lr }
    x := 0; x := x DIV x
.     8  010005584H      02100H  movs      r1,#0
.    10  010005586H      04608H  mov       r0,r1
  END i0;
.    12  010005588H  0F1B00F00H  cmp.w     r0,#0
.    16  01000558CH      0DC01H  bgt.n     2 -> 22
.    18  01000558EH      0DF07H  svc       7
.    20  010005590H      00020H  <LineNo: 32>
.    22  010005592H  0FB90F1F0H  sdiv.w    r1,r0,r0
.    26  010005596H  0FB010210H  mls.w     r2,r1,r0,r0
.    30  01000559AH  0EBA170D2H  sub.w     r0,r1,r2,lsr 31
.    34  01000559EH  0F85DFB04H  pop.w     { pc }
.    38  0100055A2H      0BF00H  nop       

  PROCEDURE* h0[0];
    VAR x: INTEGER;
  BEGIN
.    40  0100055A4H  0F84DED04H  push.w    { lr }
    x := 13;
.    44  0100055A8H      0210DH  movs      r1,#13
.    46  0100055AAH      04608H  mov       r0,r1
    (* set int for i0 pending *)
    SYSTEM.PUT(MCU.PPB_NVIC_ISPR0 + ((IntNo1 DIV 32) * 4), {IntNo1 MOD 32});
.    48  0100055ACH  0F8DF100CH  ldr.w     r1,[pc,#12] -> 64
.    52  0100055B0H  0F2480200H  movw      r2,#0008000H
.    56  0100055B4H      0600AH  str       r2,[r1]
    (*x := 17*)
  END h0;
.    58  0100055B6H  0F85DFB04H  pop.w     { pc }
.    62  0100055BAH      0BF00H  nop       
.    64  0100055BCH  0E000E204H  <Const:  -536813052>

  PROCEDURE p1;
  BEGIN
.    68  0100055C0H      0B500H  push      { lr }
    (* set int for h0 pending *)
    SYSTEM.PUT(MCU.PPB_NVIC_ISPR0 + ((IntNo0 DIV 32) * 4), {IntNo0 MOD 32});
.    70  0100055C2H  0F8DF000CH  ldr.w     r0,[pc,#12] -> 84
.    74  0100055C6H  0F2440100H  movw      r1,#16384
.    78  0100055CAH      06001H  str       r1,[r0]
  END p1;
.    80  0100055CCH      0BD00H  pop       { pc }
.    82  0100055CEH      0BF00H  nop       
.    84  0100055D0H  0E000E204H  <Const:  -536813052>

  PROCEDURE p0;
  BEGIN
.    88  0100055D4H      0B500H  push      { lr }
    SYSTEM.LDREG(12, 0A0B0C0DH); (* marker *)
.    90  0100055D6H  0F8DFC00CH  ldr.w     r12,[pc,#12] -> 104
    p1
  END p0;
.    94  0100055DAH  0F7FFFFF1H  bl.w      -30 -> 68
.    98  0100055DEH      0E000H  b         0 -> 102
.   100  0100055E0H      00035H  <LineNo: 53>
.   102  0100055E2H      0BD00H  pop       { pc }
.   104  0100055E4H  00A0B0C0DH  <Const:  168496141>

  PROCEDURE run;
  BEGIN
.   108  0100055E8H      0B500H  push      { lr }
    p
  END run;
.   110  0100055EAH  0F8DF0018H  ldr.w     r0,[pc,#24] -> 136
.   114  0100055EEH      06800H  ldr       r0,[r0]
.   116  0100055F0H  0F1B00F00H  cmp.w     r0,#0
.   120  0100055F4H      0D101H  bne.n     2 -> 126
.   122  0100055F6H      0DF05H  svc       5
.   124  0100055F8H      0003AH  <LineNo: 58>
.   126  0100055FAH      03001H  adds      r0,#1
.   128  0100055FCH      04780H  blx       r0
.   130  0100055FEH      0E000H  b         0 -> 134
.   132  010005600H      0003AH  <LineNo: 58>
.   134  010005602H      0BD00H  pop       { pc }
.   136  010005604H  02003FB40H  <Global: StacktrK2C2 data>

  PROCEDURE t0c;
  BEGIN
.   140  010005608H      0B500H  push      { lr }
    REPEAT
      run;
.   142  01000560AH  0F7FFFFEDH  bl.w      -38 -> 108
.   146  01000560EH      0E000H  b         0 -> 150
.   148  010005610H      00040H  <LineNo: 64>
      Kernel.Next
    UNTIL FALSE
.   150  010005612H  0F7FFFA97H  bl.w      Ext Proc #9
.   154  010005616H      0E000H  b         0 -> 158
.   156  010005618H      00041H  <LineNo: 65>
  END t0c;
.   158  01000561AH      04280H  cmp       r0,r0
.   160  01000561CH  0F43FAFF5H  beq.w     -22 -> 142
.   164  010005620H      0BD00H  pop       { pc }
.   166  010005622H      0BF00H  nop       

  PROCEDURE run0;
    VAR
      t0: Kernel.Thread;
      x, tid0: INTEGER;
  BEGIN
.   168  010005624H      0B500H  push      { lr }
.   170  010005626H      0B083H  sub       sp,#12
    (* in main stack *)
    x := MultiCore.CPUid();
.   172  010005628H  0F7FFFDF0H  bl.w      Ext Proc #1
.   176  01000562CH      0E000H  b         0 -> 180
.   178  01000562EH      0004BH  <LineNo: 75>
.   180  010005630H      09001H  str       r0,[sp,#4]
    x := Memory.DataMem[x].stackStart;
.   182  010005632H      09801H  ldr       r0,[sp,#4]
.   184  010005634H      02802H  cmp       r0,#2
.   186  010005636H      0D301H  bcc.n     2 -> 192
.   188  010005638H      0DF01H  svc       1
.   190  01000563AH      0004CH  <LineNo: 76>
.   192  01000563CH  0F8DF10BCH  ldr.w     r1,[pc,#188] -> 384
.   196  010005640H      000C2H  lsls      r2,r0,#3
.   198  010005642H  0EB020001H  add.w     r0,r2,r1
.   202  010005646H      06800H  ldr       r0,[r0]
.   204  010005648H      09001H  str       r0,[sp,#4]
    Out.Hex(x, 12); Out.Ln;
.   206  01000564AH      09801H  ldr       r0,[sp,#4]
.   208  01000564CH      0210CH  movs      r1,#12
.   210  01000564EH  0F7FDF81BH  bl.w      Ext Proc #7
.   214  010005652H      0E000H  b         0 -> 218
.   216  010005654H      0004DH  <LineNo: 77>
.   218  010005656H  0F7FCFFE1H  bl.w      Ext Proc #5
.   222  01000565AH      0E000H  b         0 -> 226
.   224  01000565CH      0004DH  <LineNo: 77>
    Exceptions.InstallIntHandler(IntNo0, h0);
.   226  01000565EH      0202EH  movs      r0,#46
.   228  010005660H  0F2AF01C0H  adr.w     r1,pc,#-192 -> 40
.   232  010005664H  0F7FFFF26H  bl.w      Ext Proc #10
.   236  010005668H      0E000H  b         0 -> 240
.   238  01000566AH      0004EH  <LineNo: 78>
    Exceptions.SetIntPrio(IntNo0, MCU.PPB_ExcPrio4);
.   240  01000566CH      0202EH  movs      r0,#46
.   242  01000566EH      02180H  movs      r1,#128
.   244  010005670H  0F7FFFEEAH  bl.w      Ext Proc #8
.   248  010005674H      0E000H  b         0 -> 252
.   250  010005676H      0004FH  <LineNo: 79>
    Exceptions.EnableInt(IntNo0);
.   252  010005678H      0202EH  movs      r0,#46
.   254  01000567AH  0F7FFFE99H  bl.w      Ext Proc #2
.   258  01000567EH      0E000H  b         0 -> 262
.   260  010005680H      00050H  <LineNo: 80>
    Exceptions.InstallIntHandler(IntNo1, i0);
.   262  010005682H      0202FH  movs      r0,#47
.   264  010005684H  0F2AF1108H  adr.w     r1,pc,#-264 -> 4
.   268  010005688H  0F7FFFF14H  bl.w      Ext Proc #10
.   272  01000568CH      0E000H  b         0 -> 276
.   274  01000568EH      00051H  <LineNo: 81>
    Exceptions.SetIntPrio(IntNo1, MCU.PPB_ExcPrio2);
.   276  010005690H      0202FH  movs      r0,#47
.   278  010005692H      02140H  movs      r1,#64
.   280  010005694H  0F7FFFED8H  bl.w      Ext Proc #8
.   284  010005698H      0E000H  b         0 -> 288
.   286  01000569AH      00052H  <LineNo: 82>
    Exceptions.EnableInt(IntNo1);
.   288  01000569CH      0202FH  movs      r0,#47
.   290  01000569EH  0F7FFFE87H  bl.w      Ext Proc #2
.   294  0100056A2H      0E000H  b         0 -> 298
.   296  0100056A4H      00053H  <LineNo: 83>
    Kernel.Install(MillisecsPerTick);
.   298  0100056A6H      0200AH  movs      r0,#10
.   300  0100056A8H  0F7FFFCA0H  bl.w      Ext Proc #24
.   304  0100056ACH      0E000H  b         0 -> 308
.   306  0100056AEH      00054H  <LineNo: 84>
    Kernel.Allocate(t0c, ThreadStackSize, t0, tid0, x); ASSERT(x = Kernel.OK, Errors.ProgError);
.   308  0100056B0H  0F2AF00ACH  adr.w     r0,pc,#-172 -> 140
.   312  0100056B4H  0F2404100H  movw      r1,#1024
.   316  0100056B8H      0466AH  mov       r2,sp
.   318  0100056BAH  0F11D0308H  adds.w    r3,sp,#8
.   322  0100056BEH  0F11D0404H  adds.w    r4,sp,#4
.   326  0100056C2H  0F7FFF9A3H  bl.w      Ext Proc #4
.   330  0100056C6H      0E000H  b         0 -> 334
.   332  0100056C8H      00055H  <LineNo: 85>
.   334  0100056CAH      09801H  ldr       r0,[sp,#4]
.   336  0100056CCH      02800H  cmp       r0,#0
.   338  0100056CEH      0D001H  beq.n     2 -> 344
.   340  0100056D0H      0DF68H  svc       104
.   342  0100056D2H      00055H  <LineNo: 85>
    Kernel.SetPeriod(t0, 1000, 0); Kernel.Enable(t0);
.   344  0100056D4H      09800H  ldr       r0,[sp]
.   346  0100056D6H  0F24031E8H  movw      r1,#1000
.   350  0100056DAH      02200H  movs      r2,#0
.   352  0100056DCH  0F7FFFA2EH  bl.w      Ext Proc #8
.   356  0100056E0H      0E000H  b         0 -> 360
.   358  0100056E2H      00056H  <LineNo: 86>
.   360  0100056E4H      09800H  ldr       r0,[sp]
.   362  0100056E6H  0F7FFFA1DH  bl.w      Ext Proc #6
.   366  0100056EAH      0E000H  b         0 -> 370
.   368  0100056ECH      00056H  <LineNo: 86>
    (* threads will use their stacks, exceptions will use main stack *)
    Kernel.Run (* will reset MSP to top *)
    (* we'll not return here *)
  END run0;
.   370  0100056EEH  0F7FFFC49H  bl.w      Ext Proc #23
.   374  0100056F2H      0E000H  b         0 -> 378
.   376  0100056F4H      00058H  <LineNo: 88>
.   378  0100056F6H      0B003H  add       sp,#12
.   380  0100056F8H      0BD00H  pop       { pc }
.   382  0100056FAH      0BF00H  nop       
.   384  0100056FCH  02003FF84H  <Global: Memory data>

BEGIN
.   388  010005700H      0B500H  push      { lr }
  p := p0;
.   390  010005702H      0BF00H  nop       
.   392  010005704H  0F2AF1034H  adr.w     r0,pc,#-308 -> 88
.   396  010005708H  0F8DF102CH  ldr.w     r1,[pc,#44] -> 444
.   400  01000570CH      06008H  str       r0,[r1]
  MultiCore.InitCoreOne(run0, Memory.DataMem[Core1].stackStart, Memory.DataMem[Core1].dataStart);
.   402  01000570EH      0BF00H  nop       
.   404  010005710H  0F2AF00F0H  adr.w     r0,pc,#-240 -> 168
.   408  010005714H  0F8DF101CH  ldr.w     r1,[pc,#28] -> 440
.   412  010005718H      06889H  ldr       r1,[r1,#8]
.   414  01000571AH  0F8DF2018H  ldr.w     r2,[pc,#24] -> 440
.   418  01000571EH      068D2H  ldr       r2,[r2,#12]
.   420  010005720H  0F7FFFDBAH  bl.w      Ext Proc #7
.   424  010005724H      0E000H  b         0 -> 428
.   426  010005726H      0005EH  <LineNo: 94>
  run0
END StacktrK2C2.
.   428  010005728H  0F7FFFF7CH  bl.w      -264 -> 168
.   432  01000572CH      0E000H  b         0 -> 436
.   434  01000572EH      0005FH  <LineNo: 95>
.   436  010005730H      0BD00H  pop       { pc }
.   438  010005732H      0BF00H  nop       
.   440  010005734H  02003FF84H  <Global: Memory data>
.   444  010005738H  02003FB40H  <Global: StacktrK2C2 data>
 