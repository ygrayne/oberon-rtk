.     0  010004BA8H              <Pad: 0>
MODULE Stacktr2;
(**
  Oberon RTK Framework v2
  --
  Example/test program
  https://oberon-rtk.org/examples/v2/stacktrace
  --
  MCU: RP2040, RP2350
  Board: Pico, Pico 2
  --
  Copyright (c) 2025 Gray gray@grayraven.org
  https://oberon-rtk.org/licences/
**)

  IMPORT SYSTEM, MCU := MCU2, Exceptions, Memory, MultiCore, Out, Main (*, GPIO*);

  CONST
    IntNo0 = MCU.PPB_SPAREIRQ_IRQ0;
    IntNo1 = MCU.PPB_SPAREIRQ_IRQ1;
    Core1 = 1;
    (* debug/test
    Pin0 = 16;
    Pin1 = 17;
    Pin2 = 18;
    *)

  VAR
    p: PROCEDURE;

  PROCEDURE* i0[0];
    VAR x: INTEGER;
  BEGIN
.     4  010004BACH  0F84DED04H  push.w    { lr }
    (* debug/test
    SYSTEM.PUT(MCU.SIO_GPIO_OUT_SET, {Pin2}); (* debug *)
    *)
    x := 0; x := x DIV x
.     8  010004BB0H      02100H  movs      r1,#0
.    10  010004BB2H      04608H  mov       r0,r1
  END i0;
.    12  010004BB4H  0F1B00F00H  cmp.w     r0,#0
.    16  010004BB8H      0DC01H  bgt.n     2 -> 22
.    18  010004BBAH      0DF07H  svc       7
.    20  010004BBCH      00024H  <LineNo: 36>
.    22  010004BBEH  0FB90F1F0H  sdiv.w    r1,r0,r0
.    26  010004BC2H  0FB010210H  mls.w     r2,r1,r0,r0
.    30  010004BC6H  0EBA170D2H  sub.w     r0,r1,r2,lsr 31
.    34  010004BCAH  0F85DFB04H  pop.w     { pc }
.    38  010004BCEH      0BF00H  nop       

  PROCEDURE* h0[0];
    VAR x: INTEGER;
  BEGIN
.    40  010004BD0H  0F84DED04H  push.w    { lr }
    (* debug/test
    SYSTEM.PUT(MCU.SIO_GPIO_OUT_SET, {Pin1}); (* debug *)
    *)
    x := 13;
.    44  010004BD4H      0210DH  movs      r1,#13
.    46  010004BD6H      04608H  mov       r0,r1
    (* set int for i0 pending *)
    SYSTEM.PUT(MCU.PPB_NVIC_ISPR0 + ((IntNo1 DIV 32) * 4), {IntNo1 MOD 32});
.    48  010004BD8H  0F8DF100CH  ldr.w     r1,[pc,#12] -> 64
.    52  010004BDCH  0F2480200H  movw      r2,#0008000H
.    56  010004BE0H      0600AH  str       r2,[r1]
    (*x := 17*)
  END h0;
.    58  010004BE2H  0F85DFB04H  pop.w     { pc }
.    62  010004BE6H      0BF00H  nop       
.    64  010004BE8H  0E000E204H  <Const:  -536813052>

  PROCEDURE* p1;
  BEGIN
.    68  010004BECH      0B500H  push      { lr }
    (* debug/test
    SYSTEM.PUT(MCU.SIO_GPIO_OUT_SET, {Pin0}); (* debug *)
    *)
    (* set int for h0 pending *)
    SYSTEM.PUT(MCU.PPB_NVIC_ISPR0 + ((IntNo0 DIV 32) * 4), {IntNo0 MOD 32});
.    70  010004BEEH  0F8DF000CH  ldr.w     r0,[pc,#12] -> 84
.    74  010004BF2H  0F2440100H  movw      r1,#16384
.    78  010004BF6H      06001H  str       r1,[r0]
  END p1;
.    80  010004BF8H      0BD00H  pop       { pc }
.    82  010004BFAH      0BF00H  nop       
.    84  010004BFCH  0E000E204H  <Const:  -536813052>

  PROCEDURE p0;
  BEGIN
.    88  010004C00H      0B500H  push      { lr }
    SYSTEM.LDREG(12, 0A0B0C0DH); (* marker *)
.    90  010004C02H  0F8DFC00CH  ldr.w     r12,[pc,#12] -> 104
    p1
  END p0;
.    94  010004C06H  0F7FFFFF1H  bl.w      -30 -> 68
.    98  010004C0AH      0E000H  b         0 -> 102
.   100  010004C0CH      0003FH  <LineNo: 63>
.   102  010004C0EH      0BD00H  pop       { pc }
.   104  010004C10H  00A0B0C0DH  <Const:  168496141>

  PROCEDURE run;
    VAR x: INTEGER;
  BEGIN
.   108  010004C14H      0B500H  push      { lr }
.   110  010004C16H      0B081H  sub       sp,#4
    x := Memory.DataMem[0].stackStart;
.   112  010004C18H  0F8DF0080H  ldr.w     r0,[pc,#128] -> 244
.   116  010004C1CH      06800H  ldr       r0,[r0]
.   118  010004C1EH      09000H  str       r0,[sp]
    Out.Hex(x, 12); Out.Ln;
.   120  010004C20H      09800H  ldr       r0,[sp]
.   122  010004C22H      0210CH  movs      r1,#12
.   124  010004C24H  0F7FDFD30H  bl.w      Ext Proc #7
.   128  010004C28H      0E000H  b         0 -> 132
.   130  010004C2AH      00046H  <LineNo: 70>
.   132  010004C2CH  0F7FDFCF6H  bl.w      Ext Proc #5
.   136  010004C30H      0E000H  b         0 -> 140
.   138  010004C32H      00046H  <LineNo: 70>
    Exceptions.InstallIntHandler(IntNo0, h0);
.   140  010004C34H      0202EH  movs      r0,#46
.   142  010004C36H      0BF00H  nop       
.   144  010004C38H  0F2AF016CH  adr.w     r1,pc,#-108 -> 40
.   148  010004C3CH  0F7FFFEB0H  bl.w      Ext Proc #10
.   152  010004C40H      0E000H  b         0 -> 156
.   154  010004C42H      00047H  <LineNo: 71>
    Exceptions.SetIntPrio(IntNo0, MCU.PPB_ExcPrio4);
.   156  010004C44H      0202EH  movs      r0,#46
.   158  010004C46H      02180H  movs      r1,#128
.   160  010004C48H  0F7FFFE74H  bl.w      Ext Proc #8
.   164  010004C4CH      0E000H  b         0 -> 168
.   166  010004C4EH      00048H  <LineNo: 72>
    Exceptions.EnableInt(IntNo0);
.   168  010004C50H      0202EH  movs      r0,#46
.   170  010004C52H  0F7FFFE23H  bl.w      Ext Proc #2
.   174  010004C56H      0E000H  b         0 -> 178
.   176  010004C58H      00049H  <LineNo: 73>
    Exceptions.InstallIntHandler(IntNo1, i0);
.   178  010004C5AH      0202FH  movs      r0,#47
.   180  010004C5CH  0F2AF01B4H  adr.w     r1,pc,#-180 -> 4
.   184  010004C60H  0F7FFFE9EH  bl.w      Ext Proc #10
.   188  010004C64H      0E000H  b         0 -> 192
.   190  010004C66H      0004AH  <LineNo: 74>
    Exceptions.SetIntPrio(IntNo1, MCU.PPB_ExcPrio2);
.   192  010004C68H      0202FH  movs      r0,#47
.   194  010004C6AH      02140H  movs      r1,#64
.   196  010004C6CH  0F7FFFE62H  bl.w      Ext Proc #8
.   200  010004C70H      0E000H  b         0 -> 204
.   202  010004C72H      0004BH  <LineNo: 75>
    Exceptions.EnableInt(IntNo1);
.   204  010004C74H      0202FH  movs      r0,#47
.   206  010004C76H  0F7FFFE11H  bl.w      Ext Proc #2
.   210  010004C7AH      0E000H  b         0 -> 214
.   212  010004C7CH      0004CH  <LineNo: 76>
    p
  END run;
.   214  010004C7EH  0F8DF0020H  ldr.w     r0,[pc,#32] -> 248
.   218  010004C82H      06800H  ldr       r0,[r0]
.   220  010004C84H  0F1B00F00H  cmp.w     r0,#0
.   224  010004C88H      0D101H  bne.n     2 -> 230
.   226  010004C8AH      0DF05H  svc       5
.   228  010004C8CH      0004DH  <LineNo: 77>
.   230  010004C8EH      03001H  adds      r0,#1
.   232  010004C90H      04780H  blx       r0
.   234  010004C92H      0E000H  b         0 -> 238
.   236  010004C94H      0004DH  <LineNo: 77>
.   238  010004C96H      0B001H  add       sp,#4
.   240  010004C98H      0BD00H  pop       { pc }
.   242  010004C9AH      0BF00H  nop       
.   244  010004C9CH  02003FF84H  <Global: Memory data>
.   248  010004CA0H  02003FB50H  <Global: Stacktr2 data>

BEGIN
.   252  010004CA4H      0B500H  push      { lr }
  p := p0;
.   254  010004CA6H      0BF00H  nop       
.   256  010004CA8H  0F2AF00ACH  adr.w     r0,pc,#-172 -> 88
.   260  010004CACH  0F8DF102CH  ldr.w     r1,[pc,#44] -> 308
.   264  010004CB0H      06008H  str       r0,[r1]
  (* debug
  GPIO.SetFunction(Pin0, MCU.IO_BANK0_Fsio);
  GPIO.SetFunction(Pin1, MCU.IO_BANK0_Fsio);
  GPIO.SetFunction(Pin2, MCU.IO_BANK0_Fsio);
  GPIO.OutputEnable({Pin0, Pin1, Pin2});
  GPIO.Clear({Pin0, Pin1, Pin2});
  *)
  (* test
  MemoryExt.CacheProc(SYSTEM.ADR(i0));
  MemoryExt.CacheProc(SYSTEM.ADR(h0));
  *)
  MultiCore.InitCoreOne(run, Memory.DataMem[Core1].stackStart, Memory.DataMem[Core1].dataStart);
.   266  010004CB2H      0BF00H  nop       
.   268  010004CB4H  0F2AF00A4H  adr.w     r0,pc,#-164 -> 108
.   272  010004CB8H  0F8DF101CH  ldr.w     r1,[pc,#28] -> 304
.   276  010004CBCH      06889H  ldr       r1,[r1,#8]
.   278  010004CBEH  0F8DF2018H  ldr.w     r2,[pc,#24] -> 304
.   282  010004CC2H      068D2H  ldr       r2,[r2,#12]
.   284  010004CC4H  0F7FFFF18H  bl.w      Ext Proc #7
.   288  010004CC8H      0E000H  b         0 -> 292
.   290  010004CCAH      0005DH  <LineNo: 93>
  run
END Stacktr2.
.   292  010004CCCH  0F7FFFFA2H  bl.w      -188 -> 108
.   296  010004CD0H      0E000H  b         0 -> 300
.   298  010004CD2H      0005EH  <LineNo: 94>
.   300  010004CD4H      0BD00H  pop       { pc }
.   302  010004CD6H      0BF00H  nop       
.   304  010004CD8H  02003FF84H  <Global: Memory data>
.   308  010004CDCH  02003FB50H  <Global: Stacktr2 data>
 